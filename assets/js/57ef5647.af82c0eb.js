"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[1776],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,h=d["".concat(i,".").concat(c)]||d[c]||m[c]||o;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),r=n(67294),o=n(86010),s=n(12466),l=n(16550),i=n(91980),p=n(67392),u=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=m(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,p]=h({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),k=(()=>{const e=i??d;return c({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),f(e)}),[p,f,o]),tabValues:o}}var k=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==l&&(d(t),i(a))},c=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:c,onClick:m},s,{className:(0,o.Z)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":l===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},18389:(e,t,n)=>{n.d(t,{p:()=>a});n(67294);const a=n(62404)},85083:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),o=n(18389),s=n(74866),l=n(85162);const i={displayed_sidebar:"runtimeGuideHome",sidebar_position:1,pagination_next:"manual/getting_started/installation"},p="Deno Runtime Quick Start",u={unversionedId:"manual/index",id:"manual/index",title:"Deno Runtime Quick Start",description:"Deno",source:"@site/runtime/manual/index.mdx",sourceDirName:"manual",slug:"/manual/",permalink:"/runtime/manual/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{displayed_sidebar:"runtimeGuideHome",sidebar_position:1,pagination_next:"manual/getting_started/installation"},sidebar:"runtimeGuideHome",next:{title:"Installation",permalink:"/runtime/manual/getting_started/installation"}},d={},m=[{value:"Install Deno",id:"install-deno",level:2},{value:"Create and run a TypeScript program",id:"create-and-run-a-typescript-program",level:2},{value:"Built-in web APIs and the Deno namespace",id:"built-in-web-apis-and-the-deno-namespace",level:2},{value:"Runtime security",id:"runtime-security",level:2},{value:"Importing JavaScript modules",id:"importing-javascript-modules",level:2},{value:"Remote modules and the Deno standard library",id:"remote-modules-and-the-deno-standard-library",level:2},{value:"Configure your project with deno.json",id:"configure-your-project-with-denojson",level:2},{value:"Node.js APIs and npm packages",id:"nodejs-apis-and-npm-packages",level:2},{value:"Configure your IDE",id:"configure-your-ide",level:2},{value:"Web application frameworks",id:"web-application-frameworks",level:2},{value:"Deno-native frameworks",id:"deno-native-frameworks",level:3},{value:"Deno-compatible frameworks",id:"deno-compatible-frameworks",level:3},{value:"Deploying to production",id:"deploying-to-production",level:2},{value:"Next Steps",id:"next-steps",level:2}],c={toc:m},h="wrapper";function f(e){let{components:t,...i}=e;return(0,r.kt)(h,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deno-runtime-quick-start"},"Deno Runtime Quick Start"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.deno.com"},"Deno"),"\n(",(0,r.kt)("a",{parentName:"p",href:"http://ipa-reader.xyz/?text=%CB%88di%CB%90no%CA%8A"},"/\u02c8di\u02d0no\u028a/"),", pronounced\n",(0,r.kt)("inlineCode",{parentName:"p"},"dee-no"),") is a JavaScript, TypeScript, and WebAssembly runtime with secure\ndefaults and a great developer experience. It's built on ",(0,r.kt)("a",{parentName:"p",href:"https://v8.dev/"},"V8"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/"},"Rust"),", and ",(0,r.kt)("a",{parentName:"p",href:"https://tokio.rs/"},"Tokio"),". "),(0,r.kt)("p",null,"Deno is free and open source software under the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/denoland/deno/blob/main/LICENSE.md"},"MIT license"),"."),(0,r.kt)("p",null,"Let's create and run your first Deno program in under five minutes, and\nintroduce you to a few key features of the runtime."),(0,r.kt)("h2",{id:"install-deno"},"Install Deno"),(0,r.kt)("p",null,"Install the Deno runtime on your system using one of the terminal commands\nbelow."),(0,r.kt)(s.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"mac",label:"macOS",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"curl -fsSL https://deno.land/x/install/install.sh | sh\n"))),(0,r.kt)(l.Z,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"irm https://deno.land/install.ps1 | iex\n"))),(0,r.kt)(l.Z,{value:"linux",label:"Linux",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"curl -fsSL https://deno.land/x/install/install.sh | sh\n")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/getting_started/installation"},"Additional installation options can be found here"),".\nAfter installation, you should have the ",(0,r.kt)("inlineCode",{parentName:"p"},"deno")," executable available on your\nsystem path. You can confirm this is the case by running this command in your\nterminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"deno --version\n")),(0,r.kt)("h2",{id:"create-and-run-a-typescript-program"},"Create and run a TypeScript program"),(0,r.kt)("p",null,"While you are welcome to use pure JavaScript, Deno has built-in support for\n",(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," as well. In your terminal, create\na new file called ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.ts"),", and include the following code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="hello.ts"',title:'"hello.ts"'},'interface Person {\n  firstName: string,\n  lastName: string\n}\n\nfunction sayHello(p: Person): string {\n  return `Hello, ${p.firstName}!`;\n}\n\nconst ada: Person = {\n  firstName: "Ada",\n  lastName: "Lovelace"\n};\n\nconsole.log(sayHello(ada));\n')),(0,r.kt)("p",null,"This program declares an\n",(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#interfaces"},"interface"),"\nfor a Person, and defines a function that prints a message to the console using\nthis data type. You can execute the code in this example using the ",(0,r.kt)("inlineCode",{parentName:"p"},"deno run"),"\ncommand."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"deno run -A hello.ts\n")),(0,r.kt)("p",null,"You can\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/advanced/typescript/overview"},"learn more about using TypeScript in Deno here"),"."),(0,r.kt)("h2",{id:"built-in-web-apis-and-the-deno-namespace"},"Built-in web APIs and the Deno namespace"),(0,r.kt)("p",null,"Deno aims to provide a browser-like programming environment,\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/runtime/web_platform_apis"},"implementing web standard APIs")," that exist in\nfront-end JavaScript. For example, the\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},(0,r.kt)("inlineCode",{parentName:"a"},"fetch"))," API is\navailable in the global scope, just as in the browser. To see this in action,\nreplace the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.ts")," with the following code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const site = await fetch("https://www.deno.com");\nconsole.log(await site.text());\n')),(0,r.kt)("p",null,"And then run it with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"deno run -A hello.ts\n")),(0,r.kt)("p",null,"For APIs that don't exist as a web standard (like accessing variables from the\nsystem environment, or manipulating the file system), those APIs are exposed in\nthe ",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/runtime/builtin_apis"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno")," namespace"),". Replace the contents of\n",(0,r.kt)("inlineCode",{parentName:"p"},"hello.ts")," with the following code, which will start\n",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/api?s=Deno.serve"},"an HTTP server")," on\n",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8000"},"localhost:8000"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Deno.serve((_request: Request) => {\n  return new Response("Hello, world!");\n});\n')),(0,r.kt)("p",null,"Run the script above with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"deno run -A hello.ts\n")),(0,r.kt)("p",null,"Learn more about the ",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/runtime/web_platform_apis"},"web-standard APIs")," built\nin to Deno and the ",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/runtime/builtin_apis"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno")," namespace APIs"),"."),(0,r.kt)("h2",{id:"runtime-security"},"Runtime security"),(0,r.kt)("p",null,"A major feature of Deno is\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/basics/permissions"},"runtime security by default"),", meaning that you as the\ndeveloper must explicitly allow your code to access potentially sensitive APIs\nlike file system access, network connectivity, and access to environment\nvariables."),(0,r.kt)("p",null,"So far, we've been running all of our scripts with the ",(0,r.kt)("inlineCode",{parentName:"p"},"-A")," flag, which grants\nall runtime feature access to our scripts. This is the most permissive mode to\nrun a Deno program, but usually you'll want to grant your code only the\npermissions it needs to run."),(0,r.kt)("p",null,"To see this in action, let's replace the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.ts")," again with the\n",(0,r.kt)("inlineCode",{parentName:"p"},"fetch")," example from earlier."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const site = await fetch("https://www.deno.com");\nconsole.log(await site.text());\n')),(0,r.kt)("p",null,"Run this program ",(0,r.kt)("strong",{parentName:"p"},"without")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"-A")," flag - what happens then?"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"deno run hello.ts\n")),(0,r.kt)("p",null,"Without any permission flags passed in, you'll see security prompts that look\nsomething like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'kevin@kevin-deno scratchpad % deno run index.ts\n\u2705 Granted net access to "www.deno.com".\n\u250c \u26a0\ufe0f  Deno requests net access to "deno.com".\n\u251c Requested by `fetch()` API.\n\u251c Run again with --allow-net to bypass this prompt.\n\u2514 Allow? [y/n/A] (y = yes, allow; n = no, deny; A = allow all net permissions) >\n')),(0,r.kt)("p",null,"In the prompt, you might have noticed that it mentions the CLI flag you'd need to run your code with permission to access the network - the ",(0,r.kt)("inlineCode",{parentName:"p"},"--allow-net")," flag. If you run the script again using this flag, you won't be prompted to interactively grant network access to your script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"deno run --allow-net hello.ts\n")),(0,r.kt)("p",null,"For simplicity, we will sometimes show examples that use ",(0,r.kt)("inlineCode",{parentName:"p"},"deno run -A ..."),", but\nwhenever possible (and in your production or CI environments), we'd encourage\nyou to take advantage of Deno's full suite of\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/basics/permissions"},"configurable runtime security options"),"."),(0,r.kt)("h2",{id:"importing-javascript-modules"},"Importing JavaScript modules"),(0,r.kt)("p",null,"Most of the time, you will want to break up your program into multiple files.\nAgain favoring web standards and a browser-like programming model, Deno supports\nthis through\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules"},"ECMAScript modules"),".\nConsider the earlier TypeScript example we showed you:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="hello.ts"',title:'"hello.ts"'},'interface Person {\n  firstName: string,\n  lastName: string\n}\n\nfunction sayHello(p: Person): string {\n  return `Hello, ${p.firstName}!`;\n}\n\nconst ada: Person = {\n  firstName: "Ada",\n  lastName: "Lovelace"\n};\n\nconsole.log(sayHello(ada));\n')),(0,r.kt)("p",null,"You might want to break this program up such that the ",(0,r.kt)("inlineCode",{parentName:"p"},"Person")," interface and the\n",(0,r.kt)("inlineCode",{parentName:"p"},"sayHello")," function are in a separate module. To do this, create a new file in\nthe same directory called ",(0,r.kt)("inlineCode",{parentName:"p"},"person.ts")," and include the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="person.ts"',title:'"person.ts"'},"export default interface Person {\n  firstName: string,\n  lastName: string\n}\n\nexport function sayHello(p: Person): string {\n  return `Hello, ${p.firstName}!`;\n}\n")),(0,r.kt)("p",null,"This module creates a\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#exporting_module_features"},"named export"),"\nfor the ",(0,r.kt)("inlineCode",{parentName:"p"},"sayHello")," function, and a\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#default_exports_versus_named_exports"},"default export"),"\nfor the ",(0,r.kt)("inlineCode",{parentName:"p"},"Person")," interface."),(0,r.kt)("p",null,"Back in ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.ts"),", you would consume this module using the ",(0,r.kt)("inlineCode",{parentName:"p"},"import")," keyword."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="hello.ts"',title:'"hello.ts"'},'import Person, { sayHello } from "./person.ts";\n\nconst ada: Person = {\n  lastName: "Lovelace",\n  firstName: "Ada",\n};\n\nconsole.log(sayHello(ada));\n')),(0,r.kt)("admonition",{title:"File extensions required in imports",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Note that ",(0,r.kt)("strong",{parentName:"p"},"file extensions are required")," when importing modules - import logic\nin Deno works as it does in the browser, where you would include the full file\nname of your imports.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/basics/modules/"},"You can learn more about the module system in Deno here"),"."),(0,r.kt)("h2",{id:"remote-modules-and-the-deno-standard-library"},"Remote modules and the Deno standard library"),(0,r.kt)("p",null,"Deno supports loading and executing code from URLs, much as you would using a\n",(0,r.kt)("inlineCode",{parentName:"p"},"<script>")," tag in the browser. In Deno 1.x, the\n",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/std"},"standard library")," and most\n",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/x"},"third-party modules")," are distributed on HTTPS URLs."),(0,r.kt)("p",null,"To see this in action, let's create a test for the ",(0,r.kt)("inlineCode",{parentName:"p"},"person.ts")," module we created\nabove. Deno provides a ",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/basics/testing/"},"built-in test runner"),", which\nuses an assertion module distributed via HTTPS URL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="person_test.ts"',title:'"person_test.ts"'},'import { assertEquals } from "https://deno.land/std@0.208.0/assert/mod.ts";\nimport Person, { sayHello } from "./person.ts";\n\nDeno.test("sayHello function", () => {\n  const grace: Person = {\n    lastName: "Hopper",\n    firstName: "Grace",\n  };\n\n  assertEquals("Hello, Grace!", sayHello(grace));\n});\n')),(0,r.kt)("p",null,"Run this test with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"deno test person_test.ts\n")),(0,r.kt)("p",null,"The output should look something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kevin@kevin-deno scratchpad % deno test person_test.ts\nCheck file:///Users/kevin/dev/denoland/scratchpad/person_test.ts\nrunning 1 test from ./person_test.ts\nsayHello function ... ok (4ms)\n\nok | 1 passed | 0 failed (66ms)\n")),(0,r.kt)("p",null,"There's much more to explore with ",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/std"},"the standard library"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/x"},"third-party modules")," - be sure to check them out!"),(0,r.kt)("h2",{id:"configure-your-project-with-denojson"},"Configure your project with deno.json"),(0,r.kt)("p",null,"Deno projects don't require a configuration file by default, but sometimes it's\nconvenient to store settings, admin scripts, and dependency configuration in a\nwell-known location. In Deno, that file is\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/getting_started/configuration_file"},(0,r.kt)("inlineCode",{parentName:"a"},"deno.json")," or ",(0,r.kt)("inlineCode",{parentName:"a"},"deno.jsonc")),". This\nfile acts a bit like a ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," file in Node.js."),(0,r.kt)("p",null,"One of the things you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"deno.json")," for is configuring an\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/basics/import_maps"},"import map"),", which will let you set up aliases for\nfrequently used modules. "),(0,r.kt)("p",null,"To demonstrate, let's pin the version of the standard library we want to use in our project to version ",(0,r.kt)("code",null,o.p.STD_VERSION),"."),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"deno.jsonc")," file with the following contents."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="deno.jsonc"',title:'"deno.jsonc"'},'{\n  "imports": {\n    // The dollar sign in front of "std" isn\'t special - it\'s an optional\n    // convention to show that $std is an alias set up in an import map\n    "$std/": "https://deno.land/std@0.208.0/"\n  }\n}\n')),(0,r.kt)("p",null,"Now, open up your test file from before, and change it to use this import alias."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="person_test.ts"',title:'"person_test.ts"'},'import { assertEquals } from "$std/assert/mod.ts";\nimport Person, { sayHello } from "./person.ts";\n\nDeno.test("sayHello function", () => {\n  const grace: Person = {\n    lastName: "Hopper",\n    firstName: "Grace",\n  };\n\n  assertEquals("Hello, Grace!", sayHello(grace));\n});\n')),(0,r.kt)("p",null,"Running the test with ",(0,r.kt)("inlineCode",{parentName:"p"},"deno test person_test.ts")," should work just as before, but\nyou might notice that Deno downloads a few extra files and generates a\n",(0,r.kt)("inlineCode",{parentName:"p"},"deno.lock")," file, specifying a set of files depended on by your code. Both\n",(0,r.kt)("inlineCode",{parentName:"p"},"deno.jsonc")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"deno.lock")," can be checked in to source control."),(0,r.kt)("p",null,"Learn more about\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/getting_started/configuration_file"},"configuring your project here"),"."),(0,r.kt)("h2",{id:"nodejs-apis-and-npm-packages"},"Node.js APIs and npm packages"),(0,r.kt)("p",null,"Deno provides a compatibility layer that enables your code to use\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/node/"},"Node.js built-in modules and third-party modules from npm"),".\nUsing Node and npm modules in your code looks a lot like using standard Deno\nmodules, except you'll use either a ",(0,r.kt)("inlineCode",{parentName:"p"},"node:")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"npm:")," specifier when importing\nNode built-ins or npm modules, respectively."),(0,r.kt)("p",null,"To see how it works, create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"server.js")," and include the\nfollowing - a simple HTTP server using the popular\n",(0,r.kt)("a",{parentName:"p",href:"https://expressjs.com"},"Express")," framework."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import express from "npm:express@4";\n\nconst app = express();\n\napp.get("/", (request, response) => {\n  response.send("Hello from Express!");\n});\n\napp.listen(3000);\n')),(0,r.kt)("p",null,"With ",(0,r.kt)("inlineCode",{parentName:"p"},"node:")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"npm:")," specifiers, you can bring the best of the Node.js\necosystem with you to Deno.\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/node/"},"Learn more about Node and npm support"),"."),(0,r.kt)("h2",{id:"configure-your-ide"},"Configure your IDE"),(0,r.kt)("p",null,"Deno development is supported in a number of\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/getting_started/setup_your_environment"},"major IDEs"),". A popular option is\n",(0,r.kt)("strong",{parentName:"p"},"Visual Studio Code"),", with an\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/references/vscode_deno/"},"official extension")," maintained by the Deno\nteam.\n",(0,r.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=denoland.vscode-deno"},"Install the extension"),"\nand enable it in your VS Code workspace by choosing the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Deno: Initialize Workspace Configuration")," option in the\n",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette"},"command palette"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"command palette setup",src:n(56776).Z,width:"1198",height:"260"})),(0,r.kt)("p",null,"Not a VS Code user? Find an integration for your favorite editor\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/getting_started/setup_your_environment"},"here"),"."),(0,r.kt)("h2",{id:"web-application-frameworks"},"Web application frameworks"),(0,r.kt)("p",null,"A common use case for Deno is building data-driven web applications. Doing that\nusually requires use of a higher-level web framework, for which many options\nexist in the Deno ecosystem. Here are a few of the most popular choices."),(0,r.kt)("h3",{id:"deno-native-frameworks"},"Deno-native frameworks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://fresh.deno.dev"},"Deno Fresh")," - Fresh is a web framework designed for\nDeno. Pages are server-rendered by default, with the option to include\ninteractive islands that run JavaScript on the client. If you're new to Deno\nand looking for a place to start, we recommend trying Fresh first!"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://hono.dev/getting-started/deno"},"Hono")," - Hono is a light-weight web\nframework in the tradition of ",(0,r.kt)("a",{parentName:"li",href:"https://expressjs.com"},"Express"),". Great for\nAPI servers and simple web applications.")),(0,r.kt)("h3",{id:"deno-compatible-frameworks"},"Deno-compatible frameworks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://astro.build/"},"Astro")," - Astro is a modern web framework that was\noriginally designed for Node.js, but runs great on Deno as well. We recommend\nstarting with\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/denoland/deno-astro-template"},"this template"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://kit.svelte.dev/"},"SvelteKit")," - SvelteKit is another more\nruntime-agnostic web framework that can be used with Deno. We recommend\nstarting with ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/denoland/deno-sveltekit-template"},"this template"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nuxt.com/"},"Nuxt (Vue)")," - Nuxt is a hybrid SSR and client-side\nframework that works with Deno. We recommend\nstarting with ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/denoland/deno-nuxt-template"},"this template"),".")),(0,r.kt)("p",null,"Many more frameworks support Deno than are listed here, but we'd recommend these\nas a great starting point."),(0,r.kt)("h2",{id:"deploying-to-production"},"Deploying to production"),(0,r.kt)("p",null,"When you're ready to move into production, your easiest option will be\n",(0,r.kt)("a",{parentName:"p",href:"/deploy/manual"},"Deno Deploy"),". Deno Deploy makes it easy to create fast,\nglobally distributed serverless applications with Deno."),(0,r.kt)("p",null,"You can also host Deno\n",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/advanced/deploying_deno/"},"in almost any cloud environment"),"."),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"We've only just scratched the surface of what's possible with Deno. Here are a\nfew resources you might want to check out next."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/runtime/manual/getting_started/installation"},"Install & Setup")," - options for installing\nand configuring Deno"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/runtime/tutorials/"},"Tutorials and Examples")," - Sample code and use cases\nfor Deno"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://examples.deno.land"},"Deno by Example")," - Code snippets to learn Deno by\nexample")))}f.isMDXComponent=!0},56776:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/command_palette-dd2a85f903f65636307b8a9d526cd773.png"},62404:e=>{e.exports=JSON.parse('{"CLI_VERSION":"1.38.4","STD_VERSION":"0.208.0"}')}}]);