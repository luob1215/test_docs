"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[6052],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=s,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(f,r(r({ref:n},p),{},{components:t})):a.createElement(f,r({ref:n},p))}));function f(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,r=new Array(o);r[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[d]="string"==typeof e?e:s,r[1]=i;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},80978:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(87462),s=(t(67294),t(3905));const o={},r="Permissions",i={unversionedId:"manual/basics/permissions",id:"manual/basics/permissions",title:"Permissions",description:"Deno is secure by default. Therefore, unless you specifically enable it, a",source:"@site/runtime/manual/basics/permissions.md",sourceDirName:"manual/basics",slug:"/manual/basics/permissions",permalink:"/runtime/manual/basics/permissions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Web Frameworks",permalink:"/runtime/manual/getting_started/web_frameworks"},next:{title:"Standard Library",permalink:"/runtime/manual/basics/standard_library"}},l={},c=[{value:"Run untrusted code with confidence",id:"run-untrusted-code-with-confidence",level:2},{value:"Permissions list",id:"permissions-list",level:2},{value:"Configurable permissions",id:"configurable-permissions",level:2},{value:"File system access",id:"file-system-access",level:3},{value:"Network access",id:"network-access",level:3},{value:"Environment variables",id:"environment-variables",level:3},{value:"Subprocess permissions",id:"subprocess-permissions",level:3}],p={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,s.kt)(d,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"permissions"},"Permissions"),(0,s.kt)("p",null,"Deno is secure by default. Therefore, unless you specifically enable it, a\nprogram run with Deno has no file, network, or environment access. Access to\nsecurity sensitive functionality requires that permissions have been granted to\nan executing script through command line flags, or a runtime permission prompt.\nThis is a major difference from Node, where dependencies are automatically\ngranting full access to everything, introducing hidden vulnerabilities in your\nproject."),(0,s.kt)("h2",{id:"run-untrusted-code-with-confidence"},"Run untrusted code with confidence"),(0,s.kt)("p",null,"Since Deno provides no I/O access by default, it's useful for running untrusted\ncode and auditing third-party code. If you're building or extending a platform\nthat runs user generated code, you can use Deno for running third-party code\nsecurely and host this code through\n",(0,s.kt)("a",{parentName:"p",href:"https://deno.com/subhosting"},"Deno Subhosting")," or any other cloud platform of\nyour choice."),(0,s.kt)("p",null,"For the following example ",(0,s.kt)("inlineCode",{parentName:"p"},"mod.ts")," has been granted read-only access to the file\nsystem. It cannot write to the file system, or perform any other security\nsensitive functions."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"deno run --allow-read mod.ts\n")),(0,s.kt)("h2",{id:"permissions-list"},"Permissions list"),(0,s.kt)("p",null,"The following permissions are available:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-env=\\<VARIABLE_NAME",">")," Allow environment access for things like\ngetting and setting of environment variables. Since Deno 1.9, you can specify\nan optional, comma-separated list of environment variables to provide an\nallow-list of allowed environment variables."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-sys=\\<API_NAME",">")," Allow access to APIs that provide information\nabout user's operating system, eg. ",(0,s.kt)("inlineCode",{parentName:"li"},"Deno.osRelease()")," and\n",(0,s.kt)("inlineCode",{parentName:"li"},"Deno.systemMemoryInfo()"),". You can specify a comma-separated list of allowed\ninterfaces from the following list: ",(0,s.kt)("inlineCode",{parentName:"li"},"hostname"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"osRelease"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"osUptime"),",\n",(0,s.kt)("inlineCode",{parentName:"li"},"loadavg"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"networkInterfaces"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"systemMemoryInfo"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"uid"),", and ",(0,s.kt)("inlineCode",{parentName:"li"},"gid"),". These\nstrings map to functions in the ",(0,s.kt)("inlineCode",{parentName:"li"},"Deno")," namespace that provide OS info, like\n",(0,s.kt)("a",{parentName:"li",href:"https://deno.land/api?s=Deno.SystemMemoryInfo"},"Deno.systemMemoryInfo"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-hrtime")," Allow high-resolution time measurement. High-resolution\ntime can be used in timing attacks and fingerprinting."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-net=\\<IP/HOSTNAME",">")," Allow network access. You can specify an\noptional, comma-separated list of IP addresses or hostnames (optionally with\nports) to provide an allow-list of allowed network addresses."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-ffi=\\<PATH",">")," Allow loading of dynamic libraries. You can specify\nan optional, comma-separated list of directories or files to provide an\nallow-list of allowed dynamic libraries to load. Be aware that dynamic\nlibraries are not run in a sandbox and therefore do not have the same security\nrestrictions as the Deno process. Therefore, use with caution. Please note\nthat --allow-ffi is an unstable feature."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-read=\\<PATH",">")," Allow file system read access. You can specify an\noptional, comma-separated list of directories or files to provide an\nallow-list of allowed file system access."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-run=\\<PROGRAM_NAME",">")," Allow running subprocesses. Since Deno 1.9,\nYou can specify an optional, comma-separated list of subprocesses to provide\nan allow-list of allowed subprocesses. Be aware that subprocesses are not run\nin a sandbox and therefore do not have the same security restrictions as the\nDeno process. Therefore, use with caution."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--allow-write=\\<PATH",">")," Allow file system write access. You can specify an\noptional, comma-separated list of directories or files to provide an\nallow-list of allowed file system access."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"-A, --allow-all")," Allow all permissions. This enables all security sensitive\nfunctions. Use with caution.")),(0,s.kt)("p",null,"Starting with Deno 1.36 following flags are available:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-env=\\<VARIABLE_NAME",">")," Deny environment access for things like\ngetting and setting of environment variables. You can specify an optional,\ncomma-separated list of environment variables to provide an allow-list of\nallowed environment variables. Any environment variables specified here will\nbe denied access, even if they are specified in --allow-env."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-sys=\\<API_NAME",">")," Deny access to APIs that provide information about\nuser's operating system."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-hrtime")," Disable high-resolution time measurement. High-resolution\ntime can be used in timing attacks and fingerprinting."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-net=\\<IP/HOSTNAME",">")," Disable network access. You can specify an\noptional, comma-separated list of IP addresses or hostnames (optionally with\nports) to provide a deny-list of network addresses. Any addresses specified\nhere will be denied access, even if they are specified in --allow-net."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-ffi=\\<PATH",">")," Deny loading of dynamic libraries. You can specify an\noptional, comma-separated list of directories or files to provide a deny-list\nof allowed dynamic libraries to load. Any libraries specified here will be\ndenied access, even if they are specified in --allow-ffi. Please note that\n--deny-ffi is an unstable feature."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-read=\\<PATH",">")," Deny file system read access. You can specify an\noptional, comma-separated list of directories or files to provide a deny-list\nof allowed file system access. Any paths specified here will be denied access,\neven if they are specified in --allow-read."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-run=\\<PROGRAM_NAME",">")," Deny running subprocesses. You can specify an\noptional, comma-separated list of subprocesses to provide a deny-list of\nallowed subprocesses. Be aware that subprocesses are not run in a sandbox and\ntherefore do not have the same security restrictions as the Deno process.\nTherefore, use with caution. Any programs specified here will be denied\naccess, even if they are specified in --allow-run."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"--deny-write=\\<PATH",">")," Deny file system write access. You can specify an\noptional, comma-separated list of directories or files to provide a deny-list\nof allowed file system access. Any paths specified here will be denied access,\neven if they are specified in --allow-write.")),(0,s.kt)("h2",{id:"configurable-permissions"},"Configurable permissions"),(0,s.kt)("p",null,"Some permissions allow you to grant access to a specific list of entities\n(files, servers, etc) rather than to everything."),(0,s.kt)("h3",{id:"file-system-access"},"File system access"),(0,s.kt)("p",null,"This example restricts file system access by allowing read-only access to the\n",(0,s.kt)("inlineCode",{parentName:"p"},"/usr")," directory. In consequence the execution fails as the process was\nattempting to read a file in the ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc")," directory:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'$ deno run --allow-read=/usr https://deno.land/std@0.198.0/examples/cat.ts /etc/passwd\nerror: Uncaught PermissionDenied: read access to "/etc/passwd", run again with the --allow-read flag\n\u25ba $deno$/dispatch_json.ts:40:11\n    at DenoError ($deno$/errors.ts:20:5)\n    ...\n')),(0,s.kt)("p",null,"Try it out again with the correct permissions by allowing access to ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc"),"\ninstead:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"deno run --allow-read=/etc https://deno.land/std@0.198.0/examples/cat.ts /etc/passwd\n")),(0,s.kt)("p",null,"You can further restrict some sub-paths to not be accessible, using\n",(0,s.kt)("inlineCode",{parentName:"p"},"--deny-read")," flag:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'deno run --allow-read=/etc --deny-read=/etc/hosts https://deno.land/std@0.198.0/examples/cat.ts /etc/passwd\ndeno run --allow-read=/etc --deny-read=/etc/hosts https://deno.land/std@0.198.0/examples/cat.ts /etc/hosts\nerror: Uncaught PermissionDenied: read access to "/etc/hosts"...\n')),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"--allow-write")," works the same as ",(0,s.kt)("inlineCode",{parentName:"p"},"--allow-read"),"."),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Note for Windows users: the ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"/usr")," directories and the\n",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/passwd")," file do not exist on Windows. If you want to run this example\nyourself, replace ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/passwd")," with ",(0,s.kt)("inlineCode",{parentName:"p"},"C:\\Windows\\System32\\Drivers\\etc\\hosts"),",\nand ",(0,s.kt)("inlineCode",{parentName:"p"},"/usr")," with ",(0,s.kt)("inlineCode",{parentName:"p"},"C:\\Users"),".")),(0,s.kt)("h3",{id:"network-access"},"Network access"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'// fetch.js\nconst result = await fetch("https://deno.land/");\n')),(0,s.kt)("p",null,"This is an example of how to allow network access to specific hostnames or IP\naddresses, optionally locked to a specified port:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# Multiple hostnames, all ports allowed\ndeno run --allow-net=github.com,deno.land fetch.js\n\n# A hostname at port 80:\ndeno run --allow-net=deno.land:80 fetch.js\n\n# An IPv4 address on port 443\ndeno run --allow-net=1.1.1.1:443 fetch.js\n\n# An IPv6 address, all ports allowed\ndeno run --allow-net=[2606:4700:4700::1111] fetch.js\n")),(0,s.kt)("p",null,"You can restrict certain domains to never be accessible by using the\n",(0,s.kt)("inlineCode",{parentName:"p"},"--deny-net")," flag:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# Allow to make network connections to all addresses except myserver.com.\ndeno run --allow-net --deny-net=myserver.com fetch.js\n")),(0,s.kt)("p",null,"If ",(0,s.kt)("inlineCode",{parentName:"p"},"fetch.js")," tries to establish network connections to any hostname or IP not\nexplicitly allowed, the relevant call will throw an exception."),(0,s.kt)("p",null,"Allow net calls to any hostname/IP:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"deno run --allow-net fetch.js\n")),(0,s.kt)("h3",{id:"environment-variables"},"Environment variables"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'// env.js\nDeno.env.get("HOME");\n')),(0,s.kt)("p",null,"This is an example of how to allow access to environment variables:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# Allow all environment variables\ndeno run --allow-env env.js\n\n# Allow access to only the HOME env var\ndeno run --allow-env=HOME env.js\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Note for Windows users: environment variables are case insensitive on Windows,\nso Deno also matches them case insensitively (on Windows only).")),(0,s.kt)("p",null,"You can restrict certain env vars to never be accessible by using the\n",(0,s.kt)("inlineCode",{parentName:"p"},"--deny-env")," flag:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# Allow all environment variables except AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.\ndeno run --allow-env --deny-env=AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY env.js\n")),(0,s.kt)("h3",{id:"subprocess-permissions"},"Subprocess permissions"),(0,s.kt)("p",null,"Subprocesses are very powerful, and can be a little scary: they access system\nresources regardless of the permissions you granted to the Deno process that\nspawns them. The ",(0,s.kt)("inlineCode",{parentName:"p"},"cat")," program on unix systems can be used to read files from\ndisk. If you start this program through the ",(0,s.kt)("inlineCode",{parentName:"p"},"Deno.run")," API it will be able to\nread files from disk even if the parent Deno process can not read the files\ndirectly. This is often referred to as privilege escalation."),(0,s.kt)("p",null,"Because of this, make sure you carefully consider if you want to grant a program\n",(0,s.kt)("inlineCode",{parentName:"p"},"--allow-run")," access: it essentially invalidates the Deno security sandbox. If\nyou really need to spawn a specific executable, you can reduce the risk by\nlimiting which programs a Deno process can start by passing specific executable\nnames to the ",(0,s.kt)("inlineCode",{parentName:"p"},"--allow-run")," flag."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'// run.js\nconst proc = Deno.run({ cmd: ["whoami"] });\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# Allow only spawning a `whoami` subprocess:\ndeno run --allow-run=whoami run.js\n\n# Allow running any subprocess:\ndeno run --allow-run run.js\n")),(0,s.kt)("p",null,"You can only limit the executables that are allowed; if permission is granted to\nexecute it then any parameters can be passed. For example if you pass\n",(0,s.kt)("inlineCode",{parentName:"p"},"--allow-run=cat")," then the user can use ",(0,s.kt)("inlineCode",{parentName:"p"},"cat")," to read any file."),(0,s.kt)("p",null,"You can restrict certain executables to never be accessible by using the\n",(0,s.kt)("inlineCode",{parentName:"p"},"--deny-run")," flag:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# Disallow spawning `git`.\ndeno run --allow-run --deny-run=git run.js\n")))}u.isMDXComponent=!0}}]);