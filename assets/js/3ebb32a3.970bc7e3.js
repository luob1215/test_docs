"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[437],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={},i="Deno namespace APIs",l={unversionedId:"manual/runtime/builtin_apis",id:"manual/runtime/builtin_apis",title:"Deno namespace APIs",description:"The global Deno namespace contains APIs that are not web standard, including",source:"@site/runtime/manual/runtime/builtin_apis.md",sourceDirName:"manual/runtime",slug:"/manual/runtime/builtin_apis",permalink:"/runtime/manual/runtime/builtin_apis",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Cross-runtime modules with dnt",permalink:"/runtime/manual/advanced/publishing/dnt"},next:{title:"HTTP Server APIs",permalink:"/runtime/manual/runtime/http_server_apis"}},s={},u=[{value:"Errors",id:"errors",level:2},{value:"File System",id:"file-system",level:2},{value:"I/O",id:"io",level:2},{value:"Network",id:"network",level:2},{value:"Sub Process",id:"sub-process",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deno-namespace-apis"},"Deno namespace APIs"),(0,a.kt)("p",null,"The global Deno namespace contains APIs that are not web standard, including\nAPIs for reading from files, opening TCP sockets, serving HTTP, and executing\nsubprocesses, etc."),(0,a.kt)("p",null,"For a full list of Deno Built-in APIs, see the\n",(0,a.kt)("a",{parentName:"p",href:"https://deno.land/api?s=Deno"},"reference"),". Below we highlight some of the most\nimportant."),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("p",null,"The Deno runtime comes with ",(0,a.kt)("a",{parentName:"p",href:"https://deno.land/api#Errors"},"20 error classes"),"\nthat can be raised in response to a number of conditions."),(0,a.kt)("p",null,"Some examples are:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"Deno.errors.NotFound;\nDeno.errors.WriteZero;\n")),(0,a.kt)("p",null,"They can be used as below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'try {\n  const file = await Deno.open("./some/file.txt");\n} catch (error) {\n  if (error instanceof Deno.errors.NotFound) {\n    console.error("the file was not found");\n  } else {\n    // otherwise re-throw\n    throw error;\n  }\n}\n')),(0,a.kt)("h2",{id:"file-system"},"File System"),(0,a.kt)("p",null,"The Deno runtime comes with\n",(0,a.kt)("a",{parentName:"p",href:"https://deno.land/api#File_System"},"various functions for working with files and directories"),".\nYou will need to use --allow-read and --allow-write permissions to gain access\nto the file system."),(0,a.kt)("p",null,"Refer to the links below for code examples of how to use the file system\nfunctions."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://examples.deno.land/reading-files"},"Reading files in several different ways")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/runtime/tutorials/file_server"},"Reading files in streams")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/runtime/tutorials/read_write_files#reading-a-text-file"},"Reading a text file (",(0,a.kt)("inlineCode",{parentName:"a"},"Deno.readTextFile"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/runtime/tutorials/read_write_files#writing-a-text-file"},"Writing a text file (",(0,a.kt)("inlineCode",{parentName:"a"},"Deno.writeTextFile"),")"))),(0,a.kt)("h2",{id:"io"},"I/O"),(0,a.kt)("p",null,"The Deno runtime comes with\n",(0,a.kt)("a",{parentName:"p",href:"https://deno.land/api#I/O"},"built-in functions for working with resources and I/O"),"."),(0,a.kt)("p",null,"Refer to the links below for code examples for common functions."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.close"},"Closing resources (",(0,a.kt)("inlineCode",{parentName:"a"},"Deno.close"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.seek"},"Seeking a certain position within the resource (",(0,a.kt)("inlineCode",{parentName:"a"},"Deno.seek"),")"))),(0,a.kt)("h2",{id:"network"},"Network"),(0,a.kt)("p",null,"The Deno runtime comes with\n",(0,a.kt)("a",{parentName:"p",href:"https://deno.land/api#Network"},"built-in functions for dealing with connections to network ports"),"."),(0,a.kt)("p",null,"Refer to the links below for code examples for common functions."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.connect"},"Connect to the hostname and port (",(0,a.kt)("inlineCode",{parentName:"a"},"Deno.connect"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.listen"},"Announcing on the local transport address (",(0,a.kt)("inlineCode",{parentName:"a"},"Deno.listen"),")"))),(0,a.kt)("h2",{id:"sub-process"},"Sub Process"),(0,a.kt)("p",null,"The Deno runtime comes with\n",(0,a.kt)("a",{parentName:"p",href:"https://deno.land/api#Sub_Process"},"built-in functions for spinning up subprocesses"),"."),(0,a.kt)("p",null,"Refer to the links below for code samples of how to create a subprocess."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/runtime/tutorials/subprocess"},"Creating a subprocess (",(0,a.kt)("inlineCode",{parentName:"a"},"Deno.Command"),")"))))}m.isMDXComponent=!0}}]);