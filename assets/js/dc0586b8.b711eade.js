"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[4062],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||r;return n?o.createElement(h,s(s({ref:t},u),{},{components:n})):o.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},80531:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=n(87462),a=(n(67294),n(3905));const r={},s="About Subhosting",i={unversionedId:"manual/subhosting/index",id:"manual/subhosting/index",title:"About Subhosting",description:"A powerful use case for Deno Deploy is using our isolate cloud to run untrusted",source:"@site/deploy/manual/subhosting/index.md",sourceDirName:"manual/subhosting",slug:"/manual/subhosting/",permalink:"/deploy/manual/subhosting/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"deployGuideHome",previous:{title:"Connect to Postgres",permalink:"/deploy/manual/postgres"},next:{title:"Getting started with subhosting",permalink:"/deploy/manual/subhosting/getting_started"}},l={},p=[{value:"Quick start example",id:"quick-start-example",level:2},{value:"How subhosting works",id:"how-subhosting-works",level:2},{value:"REST API reference and OpenAPI spec",id:"rest-api-reference-and-openapi-spec",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"about-subhosting"},"About Subhosting"),(0,a.kt)("p",null,"A powerful use case for Deno Deploy is using our isolate cloud to run untrusted\ncode on behalf of your end users. There are a number of scenarios where you\nmight be interested in doing this:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You are a SaaS provider that wants to empower your customers to extend your\nplatform with custom code"),(0,a.kt)("li",{parentName:"ul"},"You are an infrastructure provider that would like to enable your customers to\nrun Deno-powered edge functions"),(0,a.kt)("li",{parentName:"ul"},"You are building a browser-based editor for user code (possibly for\neducation), and you'd like a place to execute that code in a controlled and\nsecure way")),(0,a.kt)("p",null,"In cases like these, you might consider using Deno Deploy's full-featured\n",(0,a.kt)("a",{parentName:"p",href:"/deploy/api/rest"},"REST API")," to implement\n",(0,a.kt)("a",{parentName:"p",href:"https://deno.com/subhosting"},(0,a.kt)("strong",{parentName:"a"},"subhosting")),'. "Subhosting" is what we call the\nscenario where you use Deno Deploy to run your users\' untrusted code in a secure\nand scalable environment designed for\n',(0,a.kt)("a",{parentName:"p",href:"https://www.ibm.com/topics/multi-tenant"},"multitenancy"),"."),(0,a.kt)("h2",{id:"quick-start-example"},"Quick start example"),(0,a.kt)("p",null,"Looking for the smallest possible example that shows how to deploy code to\nDeno's isolate cloud? We've got you covered below. Once you've skimmed over it,\nyou can read on for more details about subhosting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'// 1.) Get API access info ready\nconst accessToken = Deno.env.get("DEPLOY_ACCESS_TOKEN");\nconst orgId = Deno.env.get("DEPLOY_ORG_ID");\nconst API = "https://api.deno.com/v1";\nconst headers = {\n  Authorization: `Bearer ${accessToken}`,\n  "Content-Type": "application/json",\n};\n\n// 2.) Create a new project\nconst pr = await fetch(`${API}/organizations/${orgId}/projects`, {\n  method: "POST",\n  headers,\n  body: JSON.stringify({\n    name: null, // randomly generates project name\n  }),\n});\nconst project = await pr.json();\n\n// 3.) Deploy a "hello world" server to the new project\nconst dr = await fetch(`${API}/projects/${project.id}/deployments`, {\n  method: "POST",\n  headers,\n  body: JSON.stringify({\n    entryPointUrl: "main.ts",\n    assets: {\n      "main.ts": {\n        "kind": "file",\n        "content": `Deno.serve(() => new Response("Hello, World!"));`,\n        "encoding": "utf-8",\n      },\n    },\n    envVars: {},\n  }),\n});\nconsole.log(dr.status);\n')),(0,a.kt)("h2",{id:"how-subhosting-works"},"How subhosting works"),(0,a.kt)("p",null,"To build subhosting with Deno Deploy, it helps to understand some key resources\nwithin the system. These resources are also represented in the\n",(0,a.kt)("a",{parentName:"p",href:"/deploy/api/rest"},"REST API"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"overview of subhosting resources",src:n(49857).Z,width:"812",height:"319"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/deploy/api/rest/organizations"},(0,a.kt)("strong",{parentName:"a"},"Organizations")),": Organizations are a\ncontainer for all data related to a subhosting implementation. Other Deploy\nusers can be invited to collaborate on an organization, and\n",(0,a.kt)("a",{parentName:"li",href:"https://dash.deno.com/account#access-tokens"},"access tokens")," can give\ndevelopers with organization access the ability to modify resources within the\norg via API. New organizations can be created in the\n",(0,a.kt)("a",{parentName:"li",href:"https://dash.deno.com/orgs/new"},"Deploy dashboard"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/deploy/api/rest/projects"},(0,a.kt)("strong",{parentName:"a"},"Projects")),": a project is a container for\n",(0,a.kt)("strong",{parentName:"li"},"deployments"),", and the analytics and usage information for all deployments\nwithin a project."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/deploy/api/rest/deployments"},(0,a.kt)("strong",{parentName:"a"},"Deployments")),": a deployment is a set of\nconfiguration, runnable code, and supporting static files that can run on an\nisolate in Deno Deploy. Deployments have an entry file that can launch a\nserver, can have a ",(0,a.kt)("a",{parentName:"li",href:"/kv/manual"},"Deno KV")," database associated with them, and\ncan be set up to run on custom domains."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/deploy/api/rest/domains"},(0,a.kt)("strong",{parentName:"a"},"Domains")),": custom domains that can be associated\nwith deployments, giving them a unique URL.")),(0,a.kt)("p",null,"The steps to implement subhosting are roughly as follows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"./getting_started"},"Create an organization")," and get an access token for the\nREST API"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"./projects_and_deployments"},"Create a project"),", and then create your first\ndeployment for that project"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/deploy/api/rest/domains"},"Provision a domain")," and associate that domain\nwith a deployment")),(0,a.kt)("p",null,'Using these techniques, you can package up user code as "deployments", and\nexecute that code on a Deno-provisioned URL or a custom URL you can configure\nyourself.'),(0,a.kt)("h2",{id:"rest-api-reference-and-openapi-spec"},"REST API reference and OpenAPI spec"),(0,a.kt)("p",null,"For a complete reference for the REST API used to implement subhosting, you can\n",(0,a.kt)("a",{parentName:"p",href:"/deploy/api/rest"},"check out the docs here"),". The Deno Deploy REST API also\nprovides an ",(0,a.kt)("a",{parentName:"p",href:"https://api.deno.com/v1/openapi.json"},"OpenAPI specification")," which\ncan be used with ",(0,a.kt)("a",{parentName:"p",href:"https://openapi.tools/"},"a number of OpenAPI-compatible tools"),"."))}d.isMDXComponent=!0},49857:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/subhosting-org-structure-155c974c9f4bc69565b14620edafe48d.svg"}}]);