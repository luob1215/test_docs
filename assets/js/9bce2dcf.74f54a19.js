"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[4472],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(t),m=i,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return t?a.createElement(f,r(r({ref:n},d),{},{components:t})):a.createElement(f,r({ref:n},d))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},26882:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(87462),i=(t(67294),t(3905));const o={},r="Configuration File",l={unversionedId:"manual/getting_started/configuration_file",id:"manual/getting_started/configuration_file",title:"Configuration File",description:"Deno supports a configuration file that allows you to customize the built-in",source:"@site/runtime/manual/getting_started/configuration_file.md",sourceDirName:"manual/getting_started",slug:"/manual/getting_started/configuration_file",permalink:"/runtime/manual/getting_started/configuration_file",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Command Line Interface",permalink:"/runtime/manual/getting_started/command_line_interface"},next:{title:"Web Frameworks",permalink:"/runtime/manual/getting_started/web_frameworks"}},s={},p=[{value:"<code>imports</code> and <code>scopes</code>",id:"imports-and-scopes",level:2},{value:"<code>tasks</code>",id:"tasks",level:2},{value:"<code>lint</code>",id:"lint",level:2},{value:"<code>fmt</code>",id:"fmt",level:2},{value:"<code>lock</code>",id:"lock",level:2},{value:"<code>nodeModulesDir</code>",id:"nodemodulesdir",level:2},{value:"<code>npmRegistry</code>",id:"npmregistry",level:2},{value:"<code>compilerOptions</code>",id:"compileroptions",level:2},{value:"Full example",id:"full-example",level:2},{value:"JSON schema",id:"json-schema",level:2}],d={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration-file"},"Configuration File"),(0,i.kt)("p",null,"Deno supports a configuration file that allows you to customize the built-in\nTypeScript compiler, formatter, and linter."),(0,i.kt)("p",null,"The configuration file supports ",(0,i.kt)("inlineCode",{parentName:"p"},".json")," and ",(0,i.kt)("inlineCode",{parentName:"p"},".jsonc")," extensions.\n",(0,i.kt)("a",{parentName:"p",href:"https://deno.com/blog/v1.18#auto-discovery-of-the-config-file"},"Since v1.18"),",\nDeno will automatically detect a ",(0,i.kt)("inlineCode",{parentName:"p"},"deno.json")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"deno.jsonc")," configuration file\nif it's in your current working directory or parent directories. The ",(0,i.kt)("inlineCode",{parentName:"p"},"--config"),"\nflag can be used to specify a different configuration file."),(0,i.kt)("admonition",{title:"Version notes",type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Before Deno v1.23, you needed to supply an explicit ",(0,i.kt)("inlineCode",{parentName:"li"},"--config")," flag."),(0,i.kt)("li",{parentName:"ul"},"Starting with Deno v1.34, globs are supported in ",(0,i.kt)("inlineCode",{parentName:"li"},"include")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"exclude"),"\nfields. You can use ",(0,i.kt)("inlineCode",{parentName:"li"},"*")," to match any number of characters, ",(0,i.kt)("inlineCode",{parentName:"li"},"?")," to match a\nsingle character, and ",(0,i.kt)("inlineCode",{parentName:"li"},"**")," to match any number of directories."))),(0,i.kt)("h2",{id:"imports-and-scopes"},(0,i.kt)("inlineCode",{parentName:"h2"},"imports")," and ",(0,i.kt)("inlineCode",{parentName:"h2"},"scopes")),(0,i.kt)("p",null,"Since version 1.30, the ",(0,i.kt)("inlineCode",{parentName:"p"},"deno.json")," configuration file acts as an\n",(0,i.kt)("a",{parentName:"p",href:"/runtime/manual/basics/import_maps"},"import map")," for resolving bare specifiers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "imports": {\n    "std/": "https://deno.land/std@0.208.0/"\n  },\n  "tasks": {\n    "dev": "deno run --watch main.ts"\n  }\n}\n')),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/runtime/manual/basics/import_maps"},"the import map section")," for more information on\nimport maps."),(0,i.kt)("p",null,"Then your script can use the bare specifier ",(0,i.kt)("inlineCode",{parentName:"p"},"std"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js,",metastring:"ignore",ignore:!0},'import { assertEquals } from "std/assert/mod.ts";\n\nassertEquals(1, 2);\n')),(0,i.kt)("p",null,"The top-level ",(0,i.kt)("inlineCode",{parentName:"p"},"deno.json")," option ",(0,i.kt)("inlineCode",{parentName:"p"},"importMap")," along with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--importmap")," flag\ncan be used to specify the import map in other files."),(0,i.kt)("h2",{id:"tasks"},(0,i.kt)("inlineCode",{parentName:"h2"},"tasks")),(0,i.kt)("p",null,"Similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),"'s ",(0,i.kt)("inlineCode",{parentName:"p"},"script")," field. Essentially shortcuts for command\nline invocations."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "tasks": {\n    "start": "deno run -A --watch=static/,routes/,data/ dev.ts"\n  }\n}\n')),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"deno task start")," will run the command. See also\n",(0,i.kt)("a",{parentName:"p",href:"/runtime/manual/tools/task_runner"},(0,i.kt)("inlineCode",{parentName:"a"},"deno task")),"."),(0,i.kt)("h2",{id:"lint"},(0,i.kt)("inlineCode",{parentName:"h2"},"lint")),(0,i.kt)("p",null,"Configuration for ",(0,i.kt)("a",{parentName:"p",href:"/runtime/manual/tools/linter"},(0,i.kt)("inlineCode",{parentName:"a"},"deno lint")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "lint": {\n    "include": ["src/"],\n    "exclude": ["src/testdata/", "data/fixtures/**/*.ts"],\n    "rules": {\n      "tags": ["recommended"],\n      "include": ["ban-untagged-todo"],\n      "exclude": ["no-unused-vars"]\n    }\n  }\n}\n')),(0,i.kt)("h2",{id:"fmt"},(0,i.kt)("inlineCode",{parentName:"h2"},"fmt")),(0,i.kt)("p",null,"Configuration for ",(0,i.kt)("a",{parentName:"p",href:"/runtime/manual/tools/formatter"},(0,i.kt)("inlineCode",{parentName:"a"},"deno fmt"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "fmt": {\n    "useTabs": true,\n    "lineWidth": 80,\n    "indentWidth": 4,\n    "semiColons": true,\n    "singleQuote": true,\n    "proseWrap": "preserve",\n    "include": ["src/"],\n    "exclude": ["src/testdata/", "data/fixtures/**/*.ts"]\n  }\n}\n')),(0,i.kt)("h2",{id:"lock"},(0,i.kt)("inlineCode",{parentName:"h2"},"lock")),(0,i.kt)("p",null,"Used to specify a different file name for the lockfile. By default deno will use\n",(0,i.kt)("inlineCode",{parentName:"p"},"deno.lock")," and place it alongside the configuration file."),(0,i.kt)("h2",{id:"nodemodulesdir"},(0,i.kt)("inlineCode",{parentName:"h2"},"nodeModulesDir")),(0,i.kt)("p",null,"Used to enable or disable the ",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules")," directory when using npm packages."),(0,i.kt)("h2",{id:"npmregistry"},(0,i.kt)("inlineCode",{parentName:"h2"},"npmRegistry")),(0,i.kt)("p",null,"Used to specify a custom npm registry for npm specifiers."),(0,i.kt)("h2",{id:"compileroptions"},(0,i.kt)("inlineCode",{parentName:"h2"},"compilerOptions")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"deno.json")," can also act as a TypeScript configuration file and supports\n",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig"},"most of the TS compiler options"),"."),(0,i.kt)("p",null,"Deno encourages users to use the default TypeScript configuration to help\nsharing code."),(0,i.kt)("p",null,"See also\n",(0,i.kt)("a",{parentName:"p",href:"/runtime/manual/advanced/typescript/configuration"},"Configuring TypeScript in Deno"),"."),(0,i.kt)("h2",{id:"full-example"},"Full example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "allowJs": true,\n    "lib": ["deno.window"],\n    "strict": true\n  },\n  "lint": {\n    "include": ["src/"],\n    "exclude": ["src/testdata/", "data/fixtures/**/*.ts"],\n    "rules": {\n      "tags": ["recommended"],\n      "include": ["ban-untagged-todo"],\n      "exclude": ["no-unused-vars"]\n    }\n  },\n  "fmt": {\n    "useTabs": true,\n    "lineWidth": 80,\n    "indentWidth": 4,\n    "semiColons": false,\n    "singleQuote": true,\n    "proseWrap": "preserve",\n    "include": ["src/"],\n    "exclude": ["src/testdata/", "data/fixtures/**/*.ts"]\n  },\n  "lock": false,\n  "nodeModulesDir": true,\n  "npmRegistry": "https://mycompany.net/artifactory/api/npm/virtual-npm",\n  "test": {\n    "include": ["src/"],\n    "exclude": ["src/testdata/", "data/fixtures/**/*.ts"]\n  },\n  "tasks": {\n    "start": "deno run --allow-read main.ts"\n  },\n  "imports": {\n    "oak": "https://deno.land/x/oak@v12.4.0/mod.ts"\n  }\n}\n')),(0,i.kt)("h2",{id:"json-schema"},"JSON schema"),(0,i.kt)("p",null,"A JSON schema file is available for editors to provide autocompletion. The file\nis versioned and available at:\n",(0,i.kt)("a",{parentName:"p",href:"https://deno.land/x/deno/cli/schemas/config-file.v1.json"},"https://deno.land/x/deno/cli/schemas/config-file.v1.json")))}u.isMDXComponent=!0}}]);