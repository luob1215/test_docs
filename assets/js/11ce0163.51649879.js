"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[7922],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),u=o,y=d["".concat(p,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(y,l(l({ref:t},c),{},{components:n})):a.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},77316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const r={},l="Connect to DynamoDB",i={unversionedId:"manual/dynamodb",id:"manual/dynamodb",title:"Connect to DynamoDB",description:"Amazon DynamoDB is a fully managed NoSQL database. To persist data to DynamoDB,",source:"@site/deploy/manual/dynamodb.md",sourceDirName:"manual",slug:"/manual/dynamodb",permalink:"/deploy/manual/dynamodb",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"deployGuideHome",previous:{title:"Application logging",permalink:"/deploy/manual/logs"},next:{title:"Connect to FaunaDB",permalink:"/deploy/manual/faunadb"}},p={},s=[{value:"Gather credentials from DynamoDB",id:"gather-credentials-from-dynamodb",level:2},{value:"Create a project in Deno Deploy",id:"create-a-project-in-deno-deploy",level:2},{value:"Write code that connects to DynamoDB",id:"write-code-that-connects-to-dynamodb",level:2},{value:"Deploy application to Deno Deploy",id:"deploy-application-to-deno-deploy",level:2}],c={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connect-to-dynamodb"},"Connect to DynamoDB"),(0,o.kt)("p",null,"Amazon DynamoDB is a fully managed NoSQL database. To persist data to DynamoDB,\nfollow the steps below:"),(0,o.kt)("p",null,"The tutorial assumes that you have an AWS and Deno Deploy account."),(0,o.kt)("p",null,"You can find a more comprehensive tutorial that builds a sample application on\ntop of DynamoDB ",(0,o.kt)("a",{parentName:"p",href:"../tutorials/tutorial-dynamodb"},"here"),"."),(0,o.kt)("h2",{id:"gather-credentials-from-dynamodb"},"Gather credentials from DynamoDB"),(0,o.kt)("p",null,"The first step in the process is to generate AWS credentials to programmatically\naccess DynamoDB."),(0,o.kt)("p",null,"Generate Credentials:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("a",{parentName:"li",href:"https://console.aws.amazon.com/iam/"},"https://console.aws.amazon.com/iam/"),' and go to the "Users" section.'),(0,o.kt)("li",{parentName:"ol"},"Click on the ",(0,o.kt)("strong",{parentName:"li"},"Add user")," button, fill the ",(0,o.kt)("strong",{parentName:"li"},"User name")," field (maybe use\n",(0,o.kt)("inlineCode",{parentName:"li"},"denamo"),"), and select ",(0,o.kt)("strong",{parentName:"li"},"Programmatic access")," type."),(0,o.kt)("li",{parentName:"ol"},"Click on ",(0,o.kt)("strong",{parentName:"li"},"Next: Permissions"),", then on ",(0,o.kt)("strong",{parentName:"li"},"Attach existing policies\ndirectly"),", search for ",(0,o.kt)("inlineCode",{parentName:"li"},"AmazonDynamoDBFullAccess")," and select it."),(0,o.kt)("li",{parentName:"ol"},"Click on ",(0,o.kt)("strong",{parentName:"li"},"Next: Tags"),", then on ",(0,o.kt)("strong",{parentName:"li"},"Next: Review")," and finally ",(0,o.kt)("strong",{parentName:"li"},"Create\nuser"),"."),(0,o.kt)("li",{parentName:"ol"},"Click on ",(0,o.kt)("strong",{parentName:"li"},"Download .csv")," button to download the credentials.")),(0,o.kt)("h2",{id:"create-a-project-in-deno-deploy"},"Create a project in Deno Deploy"),(0,o.kt)("p",null,"Next, let's create a project in Deno Deploy and set it up with the requisite\nenvironment variables:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("a",{parentName:"li",href:"https://dash.deno.com/new"},"https://dash.deno.com/new")," (Sign in with\nGitHub if you didn't already) and click on ",(0,o.kt)("strong",{parentName:"li"},"+ Empty Project")," under ",(0,o.kt)("strong",{parentName:"li"},"Deploy\nfrom the command line"),"."),(0,o.kt)("li",{parentName:"ol"},"Now click on the ",(0,o.kt)("strong",{parentName:"li"},"Settings")," button available on the project page."),(0,o.kt)("li",{parentName:"ol"},"Navigate to ",(0,o.kt)("strong",{parentName:"li"},"Environment Variables")," Section and add the following secrets.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"AWS_ACCESS_KEY_ID")," - Use the value that's available under ",(0,o.kt)("strong",{parentName:"li"},"Access key ID"),"\ncolumn in the downloaded CSV."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"AWS_SECRET_ACCESS_KEY")," - Use the value that's available under ",(0,o.kt)("strong",{parentName:"li"},"Secret access\nkey")," column in the downloaded CSV.")),(0,o.kt)("h2",{id:"write-code-that-connects-to-dynamodb"},"Write code that connects to DynamoDB"),(0,o.kt)("p",null,"AWS has an\n",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@aws-sdk/client-dynamodb"},"official SDK")," that\nworks with browsers. As most Deno Deploy's APIs are similar to browsers', the\nsame SDK works with Deno Deploy. To use the SDK in Deno, import from a cdn like\nbelow and create a client:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import {\n  DynamoDBClient,\n  GetItemCommand,\n  PutItemCommand,\n} from "https://cdn.skypack.dev/@aws-sdk/client-dynamodb?dts";\n\n// Create a client instance by providing your region information.\n// The credentials are automatically obtained from environment variables which\n// we set during our project creation step on Deno Deploy, so we don\'t have to\n// pass them manually here.\nconst client = new ApiFactory().makeNew(DynamoDB);\n\nserve({\n  "/songs": handleRequest,\n});\n\nasync function handleRequest(request) {\n  // async/await.\n  try {\n    const data = await client.send(command);\n    // process data.\n  } catch (error) {\n    // error handling.\n  } finally {\n    // finally.\n  }\n}\n')),(0,o.kt)("h2",{id:"deploy-application-to-deno-deploy"},"Deploy application to Deno Deploy"),(0,o.kt)("p",null,"Once you have finished writing your application, you can deploy it on Deno\nDeploy."),(0,o.kt)("p",null,"To do this, go back to your project page at\n",(0,o.kt)("inlineCode",{parentName:"p"},"https://dash.deno.com/projects/<project-name>"),"."),(0,o.kt)("p",null,"You should see a couple of options to deploy:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"ci_github"},"Github integration")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"deployctl"},(0,o.kt)("inlineCode",{parentName:"a"},"deployctl")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"deployctl deploy --project=<project-name> <application-file-name>\n")))),(0,o.kt)("p",null,"Unless you want to add a build step, we recommend that you select the Github\nintegration."),(0,o.kt)("p",null,"For more details on the different ways to deploy on Deno Deploy and the\ndifferent configuration options, read ",(0,o.kt)("a",{parentName:"p",href:"how-to-deploy"},"here"),"."))}m.isMDXComponent=!0}}]);