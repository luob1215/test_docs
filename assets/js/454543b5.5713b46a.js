"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[7129],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(t),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return t?a.createElement(h,i(i({ref:n},d),{},{components:t})):a.createElement(h,i({ref:n},d))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},93242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={},i="Overview of JSX and DOM in Deno",l={unversionedId:"manual/advanced/jsx_dom/overview",id:"manual/advanced/jsx_dom/overview",title:"Overview of JSX and DOM in Deno",description:"One of the common use cases for Deno is to handle workloads as part of web",source:"@site/runtime/manual/advanced/jsx_dom/overview.md",sourceDirName:"manual/advanced/jsx_dom",slug:"/manual/advanced/jsx_dom/overview",permalink:"/runtime/manual/advanced/jsx_dom/overview",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Helpful Resources",permalink:"/runtime/manual/runtime/webassembly/wasm_resources"},next:{title:"Configuring JSX in Deno",permalink:"/runtime/manual/advanced/jsx_dom/jsx"}},s={},p=[{value:"JSX",id:"jsx",level:2},{value:"Document Object Model (DOM)",id:"document-object-model-dom",level:2},{value:"CSS",id:"css",level:2}],d={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview-of-jsx-and-dom-in-deno"},"Overview of JSX and DOM in Deno"),(0,r.kt)("p",null,"One of the common use cases for Deno is to handle workloads as part of web\napplications. Because Deno includes many of the browser APIs built-in, there is\na lot of power in being able to create isomorphic code that can run both in Deno\nand in the browser. A powerful workload that can be handled by Deno is\nperforming ",(0,r.kt)("em",{parentName:"p"},"server side rendering")," (SSR), where application state is used\n",(0,r.kt)("em",{parentName:"p"},"server side")," to dynamically render HTML and CSS to be provided to a client."),(0,r.kt)("p",null,"Server side rendering, when used effectively, can dramatically increase the\nperformance of a web application by offloading heavy calculations of dynamic\ncontent to a server process allowing an application developer to minimize the\nJavaScript and application state that needs to be shipped to the browser."),(0,r.kt)("p",null,"A web application is generally made up of three key technologies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JavaScript"),(0,r.kt)("li",{parentName:"ul"},"HTML"),(0,r.kt)("li",{parentName:"ul"},"CSS")),(0,r.kt)("p",null,"As well as increasingly, ",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/runtime/webassembly/"},"Web Assembly"),"\nmight play a part in a web application."),(0,r.kt)("p",null,"These technologies combine to allow a developer to build an application in a\nbrowser using the web platform. While Deno supports a lot of web platform APIs,\nit generally only supports web APIs that are usable in a ",(0,r.kt)("em",{parentName:"p"},"server-side"),' context,\nbut in a client/browser context, the main "display" API is the Document Object\nModel (or DOM). There are APIs that are accessible to application logic via\nJavaScript that manipulate the DOM to provide a desired outcome, as well as HTML\nand CSS are used to structure and style the ',(0,r.kt)("em",{parentName:"p"},"display")," of a web application."),(0,r.kt)("p",null,"In order to facilitate manipulation of the DOM server side and the ability to\ngenerate HTML and CSS dynamically, there are some key technologies and libraries\nthat can be used with Deno to achieve this, which we will explore in this\nchapter."),(0,r.kt)("p",null,"We will be exploring fairly low-level enabling libraries and technologies,\nversus a full solution or framework for server side generation of websites."),(0,r.kt)("h2",{id:"jsx"},"JSX"),(0,r.kt)("p",null,"Created by the React team at Facebook, JSX is a popular DSL (domain specific\nlanguage) for embedding HTML-like syntax in JavaScript. The TypeScript team also\nadded support for the JSX syntax into TypeScript. JSX has become popular with\ndevelopers as it allows mixing imperative programming logic with a declarative\nsyntax that looks a lot like HTML."),(0,r.kt)("p",null,'An example of what a JSX "component" might look like:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export function Greeting({ name }) {\n  return (\n    <div>\n      <h1>Hello {name}!</h1>\n    </div>\n  );\n}\n")),(0,r.kt)("p",null,"The main challenge with JSX is that it isn't JavaScript nor is it HTML. It\nrequires transpiling to pure JavaScript before it can be used in a browser,\nwhich then has to process that logic to manipulate the DOM in the browser. This\nis probably less efficient than having a browser render static HTML."),(0,r.kt)("p",null,"This is where Deno can play a role. Deno supports JSX in both ",(0,r.kt)("inlineCode",{parentName:"p"},".jsx")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".tsx"),"\nmodules and combined with a JSX runtime, Deno can be used to dynamically\ngenerate HTML to be sent to a browser client, without the need of shipping the\nun-transpiled source file, or the JSX runtime library to the browser."),(0,r.kt)("p",null,"Read the ",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/advanced/jsx_dom/jsx"},"Configuring JSX in Deno")," section for information on how to\ncustomize the configuration of JSX in Deno."),(0,r.kt)("h2",{id:"document-object-model-dom"},"Document Object Model (DOM)"),(0,r.kt)("p",null,"The DOM is the main way a user interface is provided in a browser, and it\nexposes a set of APIs that allow it to be manipulated via JavaScript, but also\nallows the direct use of HTML and CSS."),(0,r.kt)("p",null,'While Deno has a lot of web platform APIs, it does not support most of the DOM\nAPIs related to visual representation. Having said that though, there are a few\nlibraries that provide a lot of the APIs needed to take code that was designed\nto run in a web browser to be able to run under Deno, in order to generate HTML\nand CSS which can be shipped to a browser "pre-rendered". We will cover those in\nthe following sections:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/runtime/manual/advanced/jsx_dom/linkedom"},"Using LinkeDOM with Deno")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/runtime/manual/advanced/jsx_dom/deno_dom"},"Using deno-dom with Deno")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/runtime/manual/advanced/jsx_dom/jsdom"},"Using jsdom with Deno"))),(0,r.kt)("h2",{id:"css"},"CSS"),(0,r.kt)("p",null,"Cascading Style Sheets (CSS) provide styling for HTML within the DOM. There are\ntools which make working with CSS in a server side context easier and powerful."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/runtime/manual/advanced/jsx_dom/css"},"Parsing and stringifying CSS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/runtime/manual/advanced/jsx_dom/twind"},"Using Twind with Deno"))))}u.isMDXComponent=!0}}]);