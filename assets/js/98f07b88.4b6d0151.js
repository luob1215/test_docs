"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[9010],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=m(n),u=r,k=s["".concat(p,".").concat(u)]||s[u]||c[u]||l;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},21292:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var a=n(87462),r=(n(67294),n(3905));const l={displayed_sidebar:"deployAPIHome",sidebar_position:1,sidebar_label:"Overview",pagination_next:"api/runtime-broadcast-channel"},o="API Reference",i={unversionedId:"api/index",id:"api/index",title:"API Reference",description:"This is a reference for runtime APIs available on Deno Deploy. This API is very",source:"@site/deploy/api/index.md",sourceDirName:"api",slug:"/api/",permalink:"/deploy/api/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{displayed_sidebar:"deployAPIHome",sidebar_position:1,sidebar_label:"Overview",pagination_next:"api/runtime-broadcast-channel"},sidebar:"deployAPIHome",next:{title:"BroadcastChannel",permalink:"/deploy/api/runtime-broadcast-channel"}},p={},m=[{value:"Web APIs",id:"web-apis",level:3},{value:"Deno APIs",id:"deno-apis",level:3},{value:"Future support",id:"future-support",level:2},{value:"Limitations",id:"limitations",level:2}],d={toc:m},s="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,"This is a reference for runtime APIs available on Deno Deploy. This API is very\nsimilar to the standard ",(0,r.kt)("a",{parentName:"p",href:"/runtime/manual/runtime"},"runtime API"),", but some APIs\nare not available in the same way, given that Deno Deploy is a serverless\nenvironment."),(0,r.kt)("p",null,"Please use this section of the documentation to explore available APIs on Deno\nDeploy."),(0,r.kt)("h3",{id:"web-apis"},"Web APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/console"},(0,r.kt)("inlineCode",{parentName:"a"},"console"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/atob"},(0,r.kt)("inlineCode",{parentName:"a"},"atob"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa"},(0,r.kt)("inlineCode",{parentName:"a"},"btoa"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"Fetch API"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fetch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Response")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"URL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"File")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Blob")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder"},"TextEncoder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder"},"TextDecoder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoderStream"},"TextEncoderStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/TextDecoderStream"},"TextDecoderStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Performance"},"Performance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Crypto"},"Web Crypto API"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"randomUUID()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getRandomValues()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto"},"SubtleCrypto")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket"},"WebSocket API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"},"Timers"),"\n(",(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"clearTimeout"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"setInterval"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"},"Streams API"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ReadableStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WritableStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TransformStream")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/URLPattern"},"URLPattern API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://deno.land/manual/linking_to_external_code/import_maps"},"Import Maps"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Note: ",(0,r.kt)("inlineCode",{parentName:"li"},"import maps")," are currently only available via\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/denoland/deployctl"},"deployctl")," or\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/denoland/deployctl/blob/main/action/README.md"},"deployctl GitHub Action"),"\nworkflows.")))),(0,r.kt)("h3",{id:"deno-apis"},"Deno APIs"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: only stable APIs of Deno are made available in Deploy.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.env"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.env"))," - Interact with\nenvironment variables (secrets).",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get(key: string): string | undefined")," - get the value of an environment\nvariable."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toObject(): { [key: string]: string }")," - get all environment variables as\nan object."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.connect"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.connect"))," - Connect\nto TCP sockets."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.connectTls"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.connectTls"))," -\nConnect to TCP sockets using TLS."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.startTls"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.startTls"))," - Start\nTLS handshake from an existing TCP connection."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.resolveDns"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.resolveDns"))," -\nMake DNS queries"),(0,r.kt)("li",{parentName:"ul"},"File system API",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.cwd"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.cwd"))," - Get the current\nworking directory"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.readDir"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.readDir"))," - Get\ndirectory listings"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.readFile"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.readFile"))," - Read\na file into memory"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.readTextFile"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.readTextFile"))," -\nRead a text file into memory"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.open"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.open"))," - Open a file\nfor streaming reading"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.stat"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.stat"))," - Get file\nsystem entry information"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.lstat"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.lstat"))," - Get file\nsystem entry information without following symlinks"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.realPath"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.realPath"))," - Get\nthe real path of a file after resolving symlinks"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.readLink"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.readLink"))," - Get\nthe target path for the given symlink")))),(0,r.kt)("h2",{id:"future-support"},"Future support"),(0,r.kt)("p",null,"In the future, these APIs will also be added:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Cache"},"Cache API")),(0,r.kt)("li",{parentName:"ul"},"UDP API:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Deno.connectDatagram")," for outbound UDP sockets"))),(0,r.kt)("li",{parentName:"ul"},"Customizable ",(0,r.kt)("inlineCode",{parentName:"li"},"fetch")," options using ",(0,r.kt)("inlineCode",{parentName:"li"},"Deno.createHttpClient"))),(0,r.kt)("h2",{id:"limitations"},"Limitations"),(0,r.kt)("p",null,"Just like the Deno CLI, we do not implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"__proto__")," object field as\nspecified in ECMA Script Annex B."))}c.isMDXComponent=!0}}]);