"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[6121],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),c=o,k=d["".concat(s,".").concat(c)]||d[c]||m[c]||l;return n?r.createElement(k,a(a({ref:t},p),{},{components:n})):r.createElement(k,a({ref:t},p))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},48878:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const l={},a="Building deno from Source",i={unversionedId:"manual/references/contributing/building_from_source",id:"manual/references/contributing/building_from_source",title:"Building deno from Source",description:"Below are instructions on how to build Deno from source. If you just want to use",source:"@site/runtime/manual/references/contributing/building_from_source.md",sourceDirName:"manual/references/contributing",slug:"/manual/references/contributing/building_from_source",permalink:"/runtime/manual/references/contributing/building_from_source",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Internal Details",permalink:"/runtime/manual/references/contributing/architecture"},next:{title:"Profiling",permalink:"/runtime/manual/references/contributing/profiling"}},s={},u=[{value:"Cloning the Repository",id:"cloning-the-repository",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Rust",id:"rust",level:3},{value:"Native Compilers and Linkers",id:"native-compilers-and-linkers",level:3},{value:"Protobuf Compiler",id:"protobuf-compiler",level:3},{value:"Python 3",id:"python-3",level:2},{value:"Building Deno",id:"building-deno",level:2},{value:"Building",id:"building",level:2}],p={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"building-deno-from-source"},"Building ",(0,o.kt)("inlineCode",{parentName:"h1"},"deno")," from Source"),(0,o.kt)("p",null,"Below are instructions on how to build Deno from source. If you just want to use\nDeno you can download a prebuilt executable (more information in the\n",(0,o.kt)("a",{parentName:"p",href:"/runtime/manual/getting_started/installation#download-and-install"},(0,o.kt)("inlineCode",{parentName:"a"},"Getting Started")),"\nchapter)."),(0,o.kt)("h2",{id:"cloning-the-repository"},"Cloning the Repository"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Deno uses submodules, so you must remember to clone using\n",(0,o.kt)("inlineCode",{parentName:"p"},"--recurse-submodules"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Linux"),"/",(0,o.kt)("strong",{parentName:"p"},"Mac"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git clone --recurse-submodules https://github.com/denoland/deno.git\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Windows"),":"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.google.com/search?q=windows+enable+developer+mode"},'Enable "Developer Mode"'),"\n(otherwise symlinks would require administrator privileges)."),(0,o.kt)("li",{parentName:"ol"},"Make sure you are using git version 2.19.2.windows.1 or newer."),(0,o.kt)("li",{parentName:"ol"},"Set ",(0,o.kt)("inlineCode",{parentName:"li"},"core.symlinks=true")," before the checkout:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git config --global core.symlinks true\ngit clone --recurse-submodules https://github.com/denoland/deno.git\n")))),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("h3",{id:"rust"},"Rust"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Deno requires a specific release of Rust. Deno may not support building on\nother versions, or on the Rust Nightly Releases. The version of Rust required\nfor a particular release is specified in the ",(0,o.kt)("inlineCode",{parentName:"p"},"rust-toolchain.toml")," file.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"Update or Install Rust"),". Check that\nRust installed/updated correctly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"rustc -V\ncargo -V\n")),(0,o.kt)("h3",{id:"native-compilers-and-linkers"},"Native Compilers and Linkers"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Many components of Deno require a native compiler to build optimized native\nfunctions.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Linux"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"apt install --install-recommends -y clang-16 lld-16 cmake libglib2.0-dev\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Mac"),":"),(0,o.kt)("p",null,"Mac users must have the ",(0,o.kt)("em",{parentName:"p"},"XCode Command Line Tools")," installed.\n(",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/xcode/"},"XCode")," already includes the ",(0,o.kt)("em",{parentName:"p"},"XCode Command\nLine Tools"),". Run ",(0,o.kt)("inlineCode",{parentName:"p"},"xcode-select --install")," to install it without XCode.)"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://cmake.org/"},"CMake")," is also required, but does not ship with the\n",(0,o.kt)("em",{parentName:"p"},"Command Line Tools"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"brew install cmake\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Mac M1/M2"),":"),(0,o.kt)("p",null,"For Apple aarch64 users ",(0,o.kt)("inlineCode",{parentName:"p"},"lld")," must be installed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"brew install llvm\n# Add /opt/homebrew/opt/llvm/bin/ to $PATH\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Windows"),":"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Get ",(0,o.kt)("a",{parentName:"p",href:"https://www.visualstudio.com/downloads/"},"VS Community 2019"),' with the\n"Desktop development with C++" toolkit and make sure to select the following\nrequired tools listed below along with all C++ tools.'),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Visual C++ tools for CMake"),(0,o.kt)("li",{parentName:"ul"},"Windows 10 SDK (10.0.17763.0)"),(0,o.kt)("li",{parentName:"ul"},"Testing tools core features - Build Tools"),(0,o.kt)("li",{parentName:"ul"},"Visual C++ ATL for x86 and x64"),(0,o.kt)("li",{parentName:"ul"},"Visual C++ MFC for x86 and x64"),(0,o.kt)("li",{parentName:"ul"},"C++/CLI support"),(0,o.kt)("li",{parentName:"ul"},"VC++ 2015.3 v14.00 (v140) toolset for desktop"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},'Enable "Debugging Tools for Windows".'),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},'Go to "Control Panel" \u2192 "Programs" \u2192 "Programs and Features"'),(0,o.kt)("li",{parentName:"ul"},'Select "Windows Software Development Kit - Windows 10"'),(0,o.kt)("li",{parentName:"ul"},'\u2192 "Change" \u2192 "Change" \u2192 Check "Debugging Tools For Windows" \u2192 "Change"\n\u2192"Finish".'),(0,o.kt)("li",{parentName:"ul"},"Or use:\n",(0,o.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/"},"Debugging Tools for Windows"),"\n(Notice: it will download the files, you should install\n",(0,o.kt)("inlineCode",{parentName:"li"},"X64 Debuggers And Tools-x64_en-us.msi")," file manually.)")))),(0,o.kt)("h3",{id:"protobuf-compiler"},"Protobuf Compiler"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Building Deno requires the\n",(0,o.kt)("a",{parentName:"p",href:"https://grpc.io/docs/protoc-installation/"},"Protocol Buffers compiler"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Linux"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"apt install -y protobuf-compiler\nprotoc --version  # Ensure compiler version is 3+\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Mac"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"brew install protobuf\nprotoc --version  # Ensure compiler version is 3+\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Windows")),(0,o.kt)("p",null,"Windows users can download the latest binary release from\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/protocolbuffers/protobuf/releases/latest"},"GitHub"),"."),(0,o.kt)("h2",{id:"python-3"},"Python 3"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Deno requires ",(0,o.kt)("a",{parentName:"p",href:"https://www.python.org/downloads"},"Python 3")," for running WPT\ntests. Ensure that a suffix-less ",(0,o.kt)("inlineCode",{parentName:"p"},"python"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"python.exe")," exists in your ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),"\nand it refers to Python 3.")),(0,o.kt)("h2",{id:"building-deno"},"Building Deno"),(0,o.kt)("p",null,"The easiest way to build Deno is by using a precompiled version of V8:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cargo build -vv\n")),(0,o.kt)("p",null,"However, you may also want to build Deno and V8 from source code if you are\ndoing lower-level V8 development, or using a platform that does not have\nprecompiled versions of V8:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"V8_FROM_SOURCE=1 cargo build -vv\n")),(0,o.kt)("p",null,"When building V8 from source, there may be more dependencies. See\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/denoland/rusty_v8"},"rusty_v8's README")," for more details about\nthe V8 build."),(0,o.kt)("h2",{id:"building"},"Building"),(0,o.kt)("p",null,"Build with Cargo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Build:\ncargo build -vv\n\n# Build errors?  Ensure you have latest main and try building again, or if that doesn't work try:\ncargo clean && cargo build -vv\n\n# Run:\n./target/debug/deno run cli/tests/testdata/run/002_hello.ts\n")))}m.isMDXComponent=!0}}]);