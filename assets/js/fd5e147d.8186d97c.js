"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[9854],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7986:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={pagination_next:"manual/basics/permissions"},i="Web Frameworks",l={unversionedId:"manual/getting_started/web_frameworks",id:"manual/getting_started/web_frameworks",title:"Web Frameworks",description:"Most likely, if you're building a more complex application, you'll be",source:"@site/runtime/manual/getting_started/web_frameworks.md",sourceDirName:"manual/getting_started",slug:"/manual/getting_started/web_frameworks",permalink:"/runtime/manual/getting_started/web_frameworks",draft:!1,tags:[],version:"current",frontMatter:{pagination_next:"manual/basics/permissions"},sidebar:"runtimeGuideHome",previous:{title:"Configuration File",permalink:"/runtime/manual/getting_started/configuration_file"},next:{title:"Permissions",permalink:"/runtime/manual/basics/permissions"}},s={},p=[{value:"Deno-native frameworks",id:"deno-native-frameworks",level:2},{value:"Fresh",id:"fresh",level:3},{value:"Aleph",id:"aleph",level:3},{value:"Ultra",id:"ultra",level:3},{value:"Lume",id:"lume",level:3},{value:"Oak",id:"oak",level:3}],u={toc:p},m="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"web-frameworks"},"Web Frameworks"),(0,a.kt)("p",null,"Most likely, if you're building a more complex application, you'll be\ninteracting with Deno through a web framework. There are two kinds of web\nframeworks that Deno supports:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Node.js native frameworks/tools/libraries.")," Some of the most popular\ntooling, for example esbuild, explicitly supports both Node.js and Deno. The\ndrawback here is that you might not get the best experience or performance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Deno native frameworks/tools/libraries.")," We present some of these below.")),(0,a.kt)("h2",{id:"deno-native-frameworks"},"Deno-native frameworks"),(0,a.kt)("h3",{id:"fresh"},"Fresh"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://fresh.deno.dev/"},"Fresh")," is the most popular web framework for Deno. It\nuses a model where you send no JavaScript to clients by default. The majority of\nrendering is done on a server, and the client is only responsible for\nre-rendering small\n",(0,a.kt)("a",{parentName:"p",href:"https://jasonformat.com/islands-architecture/"},"islands of interactivity"),". This\nmeans the developer explicitly opts in to client side rendering for specific\ncomponents."),(0,a.kt)("h3",{id:"aleph"},"Aleph"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://alephjs.org/docs/get-started"},"Aleph.js")," is the second most popular web\nframework for Deno. It gives you the same sort of quick-start with React as\nCreate-React-App. Like Next.js, Aleph provides SSR and SSG out of the box in\norder to allow developers to create SEO-friendly apps. In addition, Aleph\nprovides some other built-in features that don't come out of the box in Next.js,\nsuch as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hot Reloading (Using React Fast Refresh)"),(0,a.kt)("li",{parentName:"ul"},"ESM Import Syntax (No need for webpack)"),(0,a.kt)("li",{parentName:"ul"},"TypeScript-Readys")),(0,a.kt)("h3",{id:"ultra"},"Ultra"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ultrajs.dev/"},"Ultra")," is a modern streaming React framework for Deno\nthat is another alternative to Aleph. It's a way to use React to build dynamic\nmedia-rich websites, similar to Next.js."),(0,a.kt)("p",null,"Deno itself supports JSX and TypeScript out-of-the-box (and therefore Ultra does\nas well), but they don't work in the browser. Ultra takes over the task of\ntranspiling JSX and TypeScript to regular JavaScript."),(0,a.kt)("p",null,"Other highlights of Ultra include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"written in Deno."),(0,a.kt)("li",{parentName:"ul"},"powered by import maps."),(0,a.kt)("li",{parentName:"ul"},"100% esm."),(0,a.kt)("li",{parentName:"ul"},"uses import maps in both development and production, which massively\nsimplifies toolchains - you don't have to deal with heaps of bundling and\ntranspilation."),(0,a.kt)("li",{parentName:"ul"},"source code is shipped in production, similar to how it's written."),(0,a.kt)("li",{parentName:"ul"},"imports, exports, work as they do in development.")),(0,a.kt)("h3",{id:"lume"},"Lume"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://lume.land/"},"Lume")," is a static site generator for Deno that is inspired\nby other static site generators such Jekyll or Eleventy. It's simple to use and\nconfigure, while being super flexible. Highlights include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Support for multiple file formats like Markdown, YAML, JavaScript, TypeScript,\nJSX, Nunjucks."),(0,a.kt)("li",{parentName:"ul"},"You can hook in any processor to transform assets, for example sass or postcss\nfor CSS."),(0,a.kt)("li",{parentName:"ul"},"No need to install thousand of packages in ",(0,a.kt)("inlineCode",{parentName:"li"},"node_modules")," or complex bundlers.")),(0,a.kt)("h3",{id:"oak"},"Oak"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://deno.land/x/oak"},"Oak")," is a web application framework for Deno, similar\nto Express in Node.js."),(0,a.kt)("p",null,"As a middleware framework, Oak is the glue between your frontend application and\na potential database or other data sources (e.g. REST APIs, GraphQL APIs). Just\nto give you an idea, the following is a list of common tech stacks to build\nclient-server architectures:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"React.js (Frontend) + Oak (Backend) + PostgreSQL (Database)"),(0,a.kt)("li",{parentName:"ul"},"Vue.js (Frontend) + Oak (Backend) + MongoDB (Database)"),(0,a.kt)("li",{parentName:"ul"},"Angular.js (Frontend) + Oak (Backend) + Neo4j (Database)")),(0,a.kt)("p",null,"Oak offers additional functionality over the native Deno HTTP server, including\na basic router, JSON parser, middlewares, plugins, etc."))}c.isMDXComponent=!0}}]);