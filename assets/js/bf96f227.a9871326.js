(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[9187],{52674:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var l=n(87462),a=(n(67294),n(3905)),o=n(36141);const s={},r="Deployments",i={unversionedId:"api/rest/deployments",id:"api/rest/deployments",title:"Deployments",description:"A deployment is a container for assets, environment variables, compiler options,",source:"@site/deploy/api/rest/deployments.md",sourceDirName:"api/rest",slug:"/api/rest/deployments",permalink:"/deploy/api/rest/deployments",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"deployAPIHome",previous:{title:"Projects",permalink:"/deploy/api/rest/projects"},next:{title:"Domains",permalink:"/deploy/api/rest/domains"}},p={},c=[{value:"Create a deployment",id:"create-a-deployment",level:2},{value:"Compiler options",id:"compiler-options",level:3},{value:"Deployment assets",id:"deployment-assets",level:3},{value:"Get deployment details",id:"get-deployment-details",level:2},{value:"Get deployment build logs",id:"get-deployment-build-logs",level:2},{value:"Get deployment app logs",id:"get-deployment-app-logs",level:2}],d={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deployments"},"Deployments"),(0,a.kt)("p",null,"A deployment is a container for assets, environment variables, compiler options,\nand other data related to a deployed serverless application."),(0,a.kt)("h2",{id:"create-a-deployment"},"Create a deployment"),(0,a.kt)(o.Z,{path:"/projects/{projectId}/deployments",method:"post",customDocs:{compilerOptions:"See **Compiler options** below.",assets:"See **Deployment assets** below."},mdxType:"OpenApiEndpoint"},(0,a.kt)("p",null,"Initiate a build process for a new deployment. Note that this process is asynchronous - a successful request to this endpoint API doesn't mean the deployment is ready."),(0,a.kt)("p",null,"For now, you can track the progress of a build by polling either the\xa0",(0,a.kt)("a",{href:"#get-deployment-build-logs"},"build logs for a deployment")," or the\xa0",(0,a.kt)("a",{href:"#get-deployment-details"},"deployment details")," API endpoints.")),(0,a.kt)("h3",{id:"compiler-options"},"Compiler options"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"compilerOptions")," key of the ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," body sent with a deployment creation\nrequest can override the options usually configured\n",(0,a.kt)("a",{parentName:"p",href:"/runtime/manual/getting_started/configuration_file#compileroptions"},"here in deno.json"),".\nCompiler options will determine how your application's TypeScript code will be\nprocessed."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," is provided, Deploy will attempt to discover a ",(0,a.kt)("inlineCode",{parentName:"p"},"deno.json")," or\n",(0,a.kt)("inlineCode",{parentName:"p"},"deno.jsonc")," within the assets of your deployment (see ",(0,a.kt)("strong",{parentName:"p"},"Deployment assets"),"\nbelow). If an empty object ",(0,a.kt)("inlineCode",{parentName:"p"},"{}")," is provided, Deploy will use default TypeScript\nconfiguration."),(0,a.kt)("h3",{id:"deployment-assets"},"Deployment assets"),(0,a.kt)("p",null,"The assets associated with a deployment are the code and static files that drive\nthe behavior of the deployment and handle incoming requests. In JSON body sent\nwith a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," request to this endpoint, you will include an ",(0,a.kt)("inlineCode",{parentName:"p"},"assets")," attribute\nthat contains keys that represent the file path to a particular asset."),(0,a.kt)("p",null,"So for example - a file that would live in a deployment directory under\n",(0,a.kt)("inlineCode",{parentName:"p"},"server/main.ts")," would use that path as the key for the asset."),(0,a.kt)("p",null,"An asset has a ",(0,a.kt)("inlineCode",{parentName:"p"},"kind")," attribute associated with it, which can be one of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file")," - an actual file associated with the deployment"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"symlink")," - a ",(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Symbolic_link"},"symbolic link")," to\nanother file in the deployment")),(0,a.kt)("p",null,"File assets also have a ",(0,a.kt)("inlineCode",{parentName:"p"},"content")," property, which as you might imagine, is the\nactual contents of the file. These assets also have an ",(0,a.kt)("inlineCode",{parentName:"p"},"encoding")," property,\nwhich indicates whether the content is encoded as ",(0,a.kt)("inlineCode",{parentName:"p"},"utf-8")," (plain text) or\n",(0,a.kt)("inlineCode",{parentName:"p"},"base64")," for\n",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Glossary/Base64"},"base64 encoded content"),"."),(0,a.kt)("p",null,"To prevent the need to re-upload files that very seldom change, you can also\nspecify a ",(0,a.kt)("inlineCode",{parentName:"p"},"gitSha1")," attribute, which is a ",(0,a.kt)("inlineCode",{parentName:"p"},"SHA-1")," hash of the content that was\npreviously uploaded for the specified asset."),(0,a.kt)("p",null,"Below is an example of ",(0,a.kt)("inlineCode",{parentName:"p"},"assets")," that could be used to set up a deployment."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "assets": {\n    "main.ts": {\n      "kind": "file",\n      "content": "Deno.serve((req: Request) => new Response(\\"Hello World\\"));",\n      "encoding": "utf-8"\n    },\n    "images/cat1.png": {\n      "kind": "file",\n      "content": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk",\n      "encoding": "base64"\n    },\n    "images/cat2.png": {\n      "kind": "file",\n      "gitSha1": "5c4f8729e5c30a91a890e24d7285e89f418c637b"\n    },\n    "symlink.png": {\n      "kind": "symlink",\n      "target": "images/cat1.png"\n    }\n  }\n}\n')),(0,a.kt)("h2",{id:"get-deployment-details"},"Get deployment details"),(0,a.kt)(o.Z,{path:"/deployments/{deploymentId}",method:"get",mdxType:"OpenApiEndpoint"},"Get details for a deployment with the given ID. This endpoint can be polled to track the results of a serverless app deployment."),(0,a.kt)("h2",{id:"get-deployment-build-logs"},"Get deployment build logs"),(0,a.kt)(o.Z,{path:"/deployments/{deploymentId}/build_logs",method:"get",mdxType:"OpenApiEndpoint"},"Get build logs for the deployment specified by ID. You can use this information to check on the current status of a build, or to figure out what went wrong in the case of a failure.",(0,a.kt)("br",null),(0,a.kt)("br",null),"The response format can be controlled by the ",(0,a.kt)("code",null,"Accept")," header. If\xa0",(0,a.kt)("code",null,"application/x-ndjson")," is specified, the response will be a stream of newline-delimited JSON objects. Otherwise it will be a JSON array of objects."),(0,a.kt)("h2",{id:"get-deployment-app-logs"},"Get deployment app logs"),(0,a.kt)(o.Z,{path:"/deployments/{deploymentId}/app_logs",method:"get",mdxType:"OpenApiEndpoint"},"Get execution logs of a deployment. This API can return either past logs or real-time logs depending on the presence of the ",(0,a.kt)("code",null,"since")," and\xa0",(0,a.kt)("code",null,"until")," query parameters. If at least one of them is provided, past logs are returned. Otherwise real-time logs are returned.",(0,a.kt)("br",null),(0,a.kt)("br",null),"Also, the response format can be controlled by the ",(0,a.kt)("code",null,"Accept"),"\xa0 header. If ",(0,a.kt)("code",null,"application/x-ndjson")," is specified, the response will be a stream of newline-delimited JSON objects. Otherwise, it will be a JSON array of objects."))}u.isMDXComponent=!0},36141:(e,t,n)=>{"use strict";n.d(t,{Z:()=>b});var l=n(67294),a=n(93605),o=n.n(a),s=n(34673),r=n(74866),i=n(85162),p=n(9980),c=n.n(p),d=n(25108);const m=c()({html:!0});function u(e){return l.createElement("div",{dangerouslySetInnerHTML:{__html:m.render(e||"").trim()}})}let h=null;function y(e){let{method:t,path:n}=e;const a={display:"inline-block",color:"#fff",fontWeight:"bold",fontSize:"1em",padding:"0 6px",backgroundColor:"#4DACDB",margin:"0 10px 10px 0",borderRadius:"4px"};switch(t){case"put":case"patch":case"post":a.backgroundColor="#82CC4D";break;case"delete":a.backgroundColor="#FA402C"}return l.createElement("div",null,l.createElement("span",{style:a},t.toUpperCase()),l.createElement("code",{style:{display:"inline-block",padding:"0 6px",fontSize:"1em"}},"/v1"+n))}function f(e){let{apiDef:t,customDocs:n}=e;const a=[];return t.parameters.forEach((e=>{const t=n[e.name]?n[e.name]:e.description||"";a.push(l.createElement("tr",{key:e.name},l.createElement("td",null,l.createElement("code",{style:{whiteSpace:"nowrap"}},e.name,e.required?" (required)":"")),l.createElement("td",null,l.createElement("code",{style:{whiteSpace:"nowrap"}},`${e.schema.type}${e.schema.format?` (${e.schema.format})`:""}`)),l.createElement("td",null,u(t))))})),l.createElement(s.Z,{summary:"Parameters"},l.createElement("table",{style:{width:"100%"}},l.createElement("tbody",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Description")),a)))}function k(e){let{apiDef:t,customDocs:n}=e;const a=t.requestBody.content["application/json"].schema,o=[];return Object.keys(a.properties).forEach((e=>{const t=a.properties[e],s=n[e]?n[e]:t.description||"";o.push(l.createElement("tr",{key:e},l.createElement("td",null,l.createElement("code",{style:{whiteSpace:"nowrap"}},e,t.nullable?" (nullable)":"")),l.createElement("td",null,t.type?l.createElement("code",{style:{whiteSpace:"nowrap"}},`${t.type} ${t.format?`(${t.format})`:""}`):l.createElement("code",null,"object")),l.createElement("td",null,u(s))))})),l.createElement(l.Fragment,null,l.createElement(s.Z,{summary:"Request Body (JSON)"},l.createElement("table",{style:{width:"100%"}},l.createElement("tbody",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Description")),o)),a.example?l.createElement(l.Fragment,null,l.createElement("h5",null,"Example Body"),l.createElement("pre",{style:{maxHeight:"300px"}},l.createElement("code",null,JSON.stringify(a.example,null,2)))):""))}function g(e){let{apiDef:t,customDocs:n}=e;const a=[];return Object.keys(t.responses).forEach((e=>{const o=t.responses[e];let s=null;const r=[];if(o.content&&o.content["application/json"]){let e=o.content["application/json"].schema,{properties:t,example:a}=e;!t&&e.allOf?e.allOf.forEach((e=>{e.properties&&(t=e.properties)})):"array"===e.type&&(e.items.allOf?e.items.allOf.forEach((e=>{e.properties&&(t=e.properties)})):t=e.items.properties),s=a&&e.type&&"array"===e.type?[a]:a,Object.keys(t).forEach((e=>{const a=t[e],o=n[e]?n[e]:a.description||"";r.push(l.createElement("tr",{key:e},l.createElement("td",null,l.createElement("code",{style:{whiteSpace:"nowrap"}},e)),l.createElement("td",null,l.createElement("code",{style:{whiteSpace:"nowrap"}},`${a.type} ${a.format?`(${a.format})`:""}`)),l.createElement("td",null,u(o))))}))}a.push(l.createElement(i.Z,{key:e,value:e,label:e,attributes:{style:{fontSize:"14px"}}},l.createElement("h5",null,"Response Type"),l.createElement("p",null,o.description),r.length>0?l.createElement(l.Fragment,null,l.createElement("h5",null,"Content Type"),l.createElement("p",null,l.createElement("code",null,"application/json")),l.createElement("h5",null,"Response Properties"),l.createElement("table",null,l.createElement("tbody",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Description")),r))):"Empty response body",s?l.createElement(l.Fragment,null,l.createElement("h5",null,"Example"),l.createElement("pre",{style:{maxHeight:"300px"}},l.createElement("code",null,JSON.stringify(s,null,2)))):""))})),l.createElement(s.Z,{summary:"Responses"},l.createElement(r.Z,null,a))}function E(e){let{method:t,path:n,apiDef:a,customDocs:o,children:s}=e;return l.createElement(l.Fragment,null,l.createElement(y,{method:t,path:n}),l.createElement("div",{style:{margin:"10px 0"}},s||u(a.description)),a.parameters&&a.parameters.length>0?l.createElement(f,{apiDef:a,customDocs:o}):"",a.requestBody?l.createElement(k,{apiDef:a,customDocs:o}):"",a.responses?l.createElement(g,{apiDef:a,customDocs:o}):"")}function b(e){let{path:t,method:n,customDocs:a,children:s}=e;const[r,i]=(0,l.useState)(h);if((0,l.useEffect)((async()=>{if(!r)try{h=await o().validate("/openapi.json"),d.log("Loaded: %s, Version: %s",h.info.title,h.info.version),i(h)}catch(e){d.error(e)}}),[]),!r)return l.createElement(l.Fragment,null);const p=r.paths[t][n];return l.createElement(E,{path:t,method:n,apiDef:p,customDocs:a||{}},s||"")}},6498:()=>{},24654:()=>{},52361:()=>{},94616:()=>{}}]);