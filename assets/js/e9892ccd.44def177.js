"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[5359],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,h=d["".concat(i,".").concat(c)]||d[c]||m[c]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},33192:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},l="First Steps",s={unversionedId:"manual/getting_started/first_steps",id:"manual/getting_started/first_steps",title:"First Steps",description:"This page contains some examples to teach you about the fundamentals of Deno.",source:"@site/runtime/manual/getting_started/first_steps.md",sourceDirName:"manual/getting_started",slug:"/manual/getting_started/first_steps",permalink:"/runtime/manual/getting_started/first_steps",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Installation",permalink:"/runtime/manual/getting_started/installation"},next:{title:"Set Up Your Environment",permalink:"/runtime/manual/getting_started/setup_your_environment"}},i={},p=[{value:"Hello World",id:"hello-world",level:2},{value:"Running Deno programs",id:"running-deno-programs",level:2},{value:"Making an HTTP request",id:"making-an-http-request",level:2},{value:"Reading a file",id:"reading-a-file",level:2},{value:"Putting it all together in an HTTP server",id:"putting-it-all-together-in-an-http-server",level:2},{value:"More examples",id:"more-examples",level:2}],u={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"first-steps"},"First Steps"),(0,r.kt)("p",null,"This page contains some examples to teach you about the fundamentals of Deno."),(0,r.kt)("p",null,"This document assumes that you have some prior knowledge of JavaScript,\nespecially about ",(0,r.kt)("inlineCode",{parentName:"p"},"async"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"await"),". If you have no prior knowledge of JavaScript,\nyou might want to follow a guide\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript"},"on the basics of JavaScript"),"\nbefore attempting to start with Deno."),(0,r.kt)("h2",{id:"hello-world"},"Hello World"),(0,r.kt)("p",null,"Deno is a runtime for JavaScript/TypeScript which tries to be web compatible and\nuse modern features wherever possible."),(0,r.kt)("p",null,"Browser compatibility means a ",(0,r.kt)("inlineCode",{parentName:"p"},"Hello World")," program in Deno is the same as the\none you can run in the browser."),(0,r.kt)("p",null,"Create a file locally called ",(0,r.kt)("inlineCode",{parentName:"p"},"first_steps.ts")," and copy and paste the code line\nbelow:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'console.log("Welcome to Deno!");\n')),(0,r.kt)("h2",{id:"running-deno-programs"},"Running Deno programs"),(0,r.kt)("p",null,"Now to run the program from the terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno run first_steps.ts\n")),(0,r.kt)("p",null,"Deno also has the ability to execute scripts from URLs. Deno\n",(0,r.kt)("a",{parentName:"p",href:"https://examples.deno.land/"},"hosts a library")," of example code, one of which is\na ",(0,r.kt)("inlineCode",{parentName:"p"},"Hello World")," program. To run that hosted code, do:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno run https://examples.deno.land/hello-world.ts\n")),(0,r.kt)("h2",{id:"making-an-http-request"},"Making an HTTP request"),(0,r.kt)("p",null,"Many programs use HTTP requests to fetch data from a web server. Let's write a\nsmall program that fetches a file and prints its contents out to the terminal.\nJust like in the browser you can use the web standard\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},(0,r.kt)("inlineCode",{parentName:"a"},"fetch"))," API to\nmake HTTP calls."),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"first_steps.ts")," file you created above, paste the code below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const res = await fetch("https://deno.com");\nconst body = await res.text();\nconsole.log(body);\n')),(0,r.kt)("p",null,"Let's walk through what this application does:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"We make a request to the ",(0,r.kt)("inlineCode",{parentName:"li"},"https://deno.com"),", await the response, and store it\nin the ",(0,r.kt)("inlineCode",{parentName:"li"},"res")," constant."),(0,r.kt)("li",{parentName:"ol"},"We parse the response body as a text and store in the ",(0,r.kt)("inlineCode",{parentName:"li"},"body")," constant."),(0,r.kt)("li",{parentName:"ol"},"We write the contents of the ",(0,r.kt)("inlineCode",{parentName:"li"},"body")," constant to the console.")),(0,r.kt)("p",null,"Try it out:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno run first_steps.ts\n")),(0,r.kt)("p",null,"Or, try this script hosted at ",(0,r.kt)("inlineCode",{parentName:"p"},"https://deno.land/std@0.198.0/examples/curl.ts"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno run https://deno.land/std@0.198.0/examples/curl.ts https://deno.com\n")),(0,r.kt)("p",null,"The program will display a prompt like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'\u250c \u26a0\ufe0f  Deno requests net access to "deno.com".\n\u251c Requested by `fetch()` API.\n\u251c Run again with --allow-net to bypass this prompt.\n\u2514 Allow? [y/n/A] (y = yes, allow; n = no, deny; A = allow all net permissions) >\n')),(0,r.kt)("p",null,"You might remember from the introduction that Deno is a runtime that is secure\nby default. This means you need to explicitly give programs permission to do\ncertain 'privileged' actions, such as access the network."),(0,r.kt)("p",null,"You can answer 'y' to the prompt, or try it out again with the correct\npermission flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno run --allow-net=deno.com first_steps.ts\n")),(0,r.kt)("p",null,"Or, using the curl script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno run --allow-net=deno.com https://deno.land/std@0.198.0/examples/curl.ts https://deno.com\n")),(0,r.kt)("h2",{id:"reading-a-file"},"Reading a file"),(0,r.kt)("p",null,"Deno also provides APIs that do not come from the web. These are all contained\nin the ",(0,r.kt)("inlineCode",{parentName:"p"},"Deno")," global. You can find documentation for these built-in APIs here at\n",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/api"},(0,r.kt)("inlineCode",{parentName:"a"},"/api")),"."),(0,r.kt)("p",null,"Filesystem APIs for example do not have a web standard form, so Deno provides\nits own API."),(0,r.kt)("p",null,"In this program, each command-line argument is assumed to be a filename, the\nfile is opened, and printed to stdout."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const filenames = Deno.args;\nfor (const filename of filenames) {\n  const file = await Deno.open(filename);\n  await file.readable.pipeTo(Deno.stdout.writable, { preventClose: true });\n}\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadableStream.pipeTo(writable)")," method here actually makes no more than\nthe necessary kernel\u2192userspace\u2192kernel copies. That is, the same memory from\nwhich data is read from the file is written to stdout. This illustrates a\ngeneral design goal for I/O streams in Deno."),(0,r.kt)("p",null,"Again, here, we need to give --allow-read access to the program."),(0,r.kt)("p",null,"Try the program:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'# macOS / Linux\ndeno run --allow-read https://deno.land/std@0.198.0/examples/cat.ts /etc/hosts\n\n# Windows\ndeno run --allow-read https://deno.land/std@0.198.0/examples/cat.ts "C:\\Windows\\System32\\Drivers\\etc\\hosts"\n')),(0,r.kt)("h2",{id:"putting-it-all-together-in-an-http-server"},"Putting it all together in an HTTP server"),(0,r.kt)("p",null,"One of the most common use cases for Deno is building an HTTP Server."),(0,r.kt)("p",null,"Create a new file called ",(0,r.kt)("inlineCode",{parentName:"p"},"http_server.ts")," and copy and paste the code below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const handler = async (_request: Request): Promise<Response> => {\n  const resp = await fetch("https://api.github.com/users/denoland", {\n    // The init object here has a headers object containing a\n    // header that indicates what type of response we accept.\n    // We\'re not specifying the method field since by default\n    // fetch makes a GET request.\n    headers: {\n      accept: "application/json",\n    },\n  });\n\n  return new Response(resp.body, {\n    status: resp.status,\n    headers: {\n      "content-type": "application/json",\n    },\n  });\n};\n\nDeno.serve(handler);\n')),(0,r.kt)("p",null,"Let's walk through what this program does."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Import the http server from ",(0,r.kt)("inlineCode",{parentName:"li"},"std/http")," (standard library)"),(0,r.kt)("li",{parentName:"ol"},"HTTP servers need a handler function. This function is called for every\nrequest that comes in. It must return a ",(0,r.kt)("inlineCode",{parentName:"li"},"Response"),". The handler function can\nbe asynchronous (it may return a ",(0,r.kt)("inlineCode",{parentName:"li"},"Promise"),")."),(0,r.kt)("li",{parentName:"ol"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"fetch")," to fetch the url."),(0,r.kt)("li",{parentName:"ol"},"Return the GitHub response as a response to the handler."),(0,r.kt)("li",{parentName:"ol"},"Finally, to start the server on the default port, call ",(0,r.kt)("inlineCode",{parentName:"li"},"serve")," with the\nhandler.")),(0,r.kt)("p",null,"Now run the server. Note that you need to give network permissions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno run --allow-net http_server.ts\n")),(0,r.kt)("p",null,"With the server listening on port ",(0,r.kt)("inlineCode",{parentName:"p"},"8000"),", make a GET request to that endpoint."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://localhost:8000\n")),(0,r.kt)("p",null,"You will see a JSON response from the Deno GitHub page."),(0,r.kt)("h2",{id:"more-examples"},"More examples"),(0,r.kt)("p",null,"You can find more examples in the ",(0,r.kt)("a",{parentName:"p",href:"/runtime/tutorials"},"Tutorials")," section and at\n",(0,r.kt)("a",{parentName:"p",href:"https://examples.deno.land/"},"Deno by Example"),"."))}m.isMDXComponent=!0}}]);