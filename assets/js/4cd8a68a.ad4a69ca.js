"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[201],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},89419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const l={},o="Environment variables",i={unversionedId:"manual/basics/env_variables",id:"manual/basics/env_variables",title:"Environment variables",description:"There are a few ways to use environment variables in Deno:",source:"@site/runtime/manual/basics/env_variables.md",sourceDirName:"manual/basics",slug:"/manual/basics/env_variables",permalink:"/runtime/manual/basics/env_variables",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Import Maps",permalink:"/runtime/manual/basics/import_maps"},next:{title:"Debugging Your Code",permalink:"/runtime/manual/basics/debugging_your_code"}},s={},d=[{value:"Built-in <code>Deno.env</code>",id:"built-in-denoenv",level:2},{value:"<code>.env</code> file",id:"env-file",level:2},{value:"<code>std/flags</code>",id:"stdflags",level:2},{value:"Special environment variables",id:"special-environment-variables",level:2}],p={toc:d},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"environment-variables"},"Environment variables"),(0,r.kt)("p",null,"There are a few ways to use environment variables in Deno:"),(0,r.kt)("h2",{id:"built-in-denoenv"},"Built-in ",(0,r.kt)("inlineCode",{parentName:"h2"},"Deno.env")),(0,r.kt)("p",null,"The Deno runtime offers built-in support for environment variables with\n",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/api@v1.25.3?s=Deno.env"},(0,r.kt)("inlineCode",{parentName:"a"},"Deno.env")),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Deno.env")," has getter and setter methods. Here is example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Deno.env.set("FIREBASE_API_KEY", "examplekey123");\nDeno.env.set("FIREBASE_AUTH_DOMAIN", "firebasedomain.com");\n\nconsole.log(Deno.env.get("FIREBASE_API_KEY")); // examplekey123\nconsole.log(Deno.env.get("FIREBASE_AUTH_DOMAIN")); // firebasedomain.com\nconsole.log(Deno.env.has("FIREBASE_AUTH_DOMAIN")); // true\n')),(0,r.kt)("h2",{id:"env-file"},(0,r.kt)("inlineCode",{parentName:"h2"},".env")," file"),(0,r.kt)("p",null,"You can also put environment variables in a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file and retrieve them using\n",(0,r.kt)("inlineCode",{parentName:"p"},"dotenv")," in the standard library."),(0,r.kt)("p",null,"Let's say you have an ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file that looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"PASSWORD=Geheimnis\n")),(0,r.kt)("p",null,"To access the environment variables in the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file, import the ",(0,r.kt)("inlineCode",{parentName:"p"},"load"),"\nfunction from the standard library. Then, import the configuration using it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { load } from "https://deno.land/std@0.208.0/dotenv/mod.ts";\n\nconst env = await load();\nconst password = env["PASSWORD"];\n\nconsole.log(password);\n// "Geheimnis"\n')),(0,r.kt)("h2",{id:"stdflags"},(0,r.kt)("inlineCode",{parentName:"h2"},"std/flags")),(0,r.kt)("p",null,"The Deno standard library has a\n",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/std/flags/mod.ts"},(0,r.kt)("inlineCode",{parentName:"a"},"std/flags")," module")," for parsing command\nline arguments."),(0,r.kt)("h2",{id:"special-environment-variables"},"Special environment variables"),(0,r.kt)("p",null,"The Deno runtime has these special environment variables."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"name"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_AUTH_TOKENS"),(0,r.kt)("td",{parentName:"tr",align:null},"A semi-colon separated list of bearer tokens and hostnames to use when fetching remote modules from private repositories",(0,r.kt)("br",null),"(e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"abcde12345@deno.land;54321edcba@github.com"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_TLS_CA_STORE"),(0,r.kt)("td",{parentName:"tr",align:null},"Comma-separated list of order dependent certificate stores.",(0,r.kt)("br",null),"Possible values: ",(0,r.kt)("inlineCode",{parentName:"td"},"system"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"mozilla"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"mozilla"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_CERT"),(0,r.kt)("td",{parentName:"tr",align:null},"Load certificate authority from PEM encoded file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_DIR"),(0,r.kt)("td",{parentName:"tr",align:null},"Set the cache directory")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_INSTALL_ROOT"),(0,r.kt)("td",{parentName:"tr",align:null},"Set deno install's output directory (defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"$HOME/.deno/bin"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_REPL_HISTORY"),(0,r.kt)("td",{parentName:"tr",align:null},"Set REPL history file path History file is disabled when the value is empty ",(0,r.kt)("br",null),"(defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"$DENO_DIR/deno_history.txt"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_NO_PACKAGE_JSON"),(0,r.kt)("td",{parentName:"tr",align:null},"Disables auto-resolution of ",(0,r.kt)("inlineCode",{parentName:"td"},"package.json"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_NO_PROMPT"),(0,r.kt)("td",{parentName:"tr",align:null},"Set to disable permission prompts on access",(0,r.kt)("br",null),"(alternative to passing ",(0,r.kt)("inlineCode",{parentName:"td"},"--no-prompt")," on invocation)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_NO_UPDATE_CHECK"),(0,r.kt)("td",{parentName:"tr",align:null},"Set to disable checking if a newer Deno version is available")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_V8_FLAGS"),(0,r.kt)("td",{parentName:"tr",align:null},"Set V8 command line options")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DENO_JOBS"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of parallel workers used for the ",(0,r.kt)("inlineCode",{parentName:"td"},"--parallel")," flag with the test subcommand.",(0,r.kt)("br",null),"Defaults to number of available CPUs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HTTP_PROXY"),(0,r.kt)("td",{parentName:"tr",align:null},"Proxy address for HTTP requests (module downloads, fetch)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HTTPS_PROXY"),(0,r.kt)("td",{parentName:"tr",align:null},"Proxy address for HTTPS requests (module downloads, fetch)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NPM_CONFIG_REGISTRY"),(0,r.kt)("td",{parentName:"tr",align:null},"URL to use for the npm registry.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_COLOR"),(0,r.kt)("td",{parentName:"tr",align:null},"Set to disable color")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_PROXY"),(0,r.kt)("td",{parentName:"tr",align:null},"Comma-separated list of hosts which do not use a proxy (module downloads, fetch)")))),(0,r.kt)("p",null,"You can also view the same content with ",(0,r.kt)("inlineCode",{parentName:"p"},"deno --help"),"."))}u.isMDXComponent=!0}}]);