"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[2022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88366:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={},i="Simple API server",l={unversionedId:"tutorials/simple-api",id:"tutorials/simple-api",title:"Simple API server",description:"Deno is great for creating simple, light-weight API servers. Learn how to create",source:"@site/deploy/tutorials/simple-api.md",sourceDirName:"tutorials",slug:"/tutorials/simple-api",permalink:"/deploy/tutorials/simple-api",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"deployTutorialsHome",previous:{title:"Basic Fresh site",permalink:"/deploy/tutorials/fresh"},next:{title:"Deploy a static site",permalink:"/deploy/tutorials/static-site"}},s={},p=[{value:"Create a local API server",id:"create-a-local-api-server",level:2},{value:"Create a GitHub repository for your app",id:"create-a-github-repository-for-your-app",level:2},{value:"Import and deploy your appliction project",id:"import-and-deploy-your-appliction-project",level:2},{value:"Test out your new link shortener",id:"test-out-your-new-link-shortener",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"simple-api-server"},"Simple API server"),(0,o.kt)("p",null,"Deno is great for creating simple, light-weight API servers. Learn how to create\nand deploy one using Deno Deploy in this tutorial."),(0,o.kt)("h2",{id:"create-a-local-api-server"},"Create a local API server"),(0,o.kt)("p",null,"In your terminal, create a file named ",(0,o.kt)("inlineCode",{parentName:"p"},"server.ts"),". We'll implement a simple link\nshortener service using a ",(0,o.kt)("a",{parentName:"p",href:"/kv/manual"},"Deno KV database"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server.ts"',title:'"server.ts"'},'const kv = await Deno.openKv();\n\nDeno.serve(async (request: Request) => {\n  // Create short links\n  if (request.method == "POST") {\n    const body = await request.text();\n    const { slug, url } = JSON.parse(body);\n    const result = await kv.set(["links", slug], url);\n    return new Response(JSON.stringify(result));\n  }\n\n  // Redirect short links\n  const slug = request.url.split("/").pop() || "";\n  const url = (await kv.get(["links", slug])).value as string;\n  if (url) {\n    return Response.redirect(url, 301);\n  } else {\n    const m = !slug ? "Please provide a slug." : `Slug "${slug}" not found`;\n    return new Response(m, { status: 404 });\n  }\n});\n')),(0,o.kt)("p",null,"You can run this server on your machine with this command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"deno run -A --unstable server.ts\n")),(0,o.kt)("p",null,"This server will respond to HTTP ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," requests. The ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," handler\nexpects to receive a JSON document in request the body with ",(0,o.kt)("inlineCode",{parentName:"p"},"slug")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"url"),"\nproperties. The ",(0,o.kt)("inlineCode",{parentName:"p"},"slug")," is the short URL component, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"url")," is the full URL\nyou want to redirect to."),(0,o.kt)("p",null,"Here's an example of using this API endpoint with cURL:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl --header "Content-Type: application/json" \\\n  --request POST \\\n  --data \'{"url":"https://docs.deno.com/runtime/manual","slug":"denodocs"}\' \\\n  http://localhost:8000/\n')),(0,o.kt)("p",null,"In response, the server should send you JSON with the KV data representing the\nresult of the ",(0,o.kt)("inlineCode",{parentName:"p"},"set")," operation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{ "ok": true, "versionstamp": "00000000000000060000" }\n')),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," request to our server will take a URL slug as a path parameter, and\nredirect to the provided URL. You can visit this URL in the browser, or make\nanother cURL request to see this in action!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl -v http://localhost:8000/denodocs\n")),(0,o.kt)("p",null,"Now that we have an API server, let's push it to a GitHub repository that we'll\nlater link to Deno Deploy."),(0,o.kt)("h2",{id:"create-a-github-repository-for-your-app"},"Create a GitHub repository for your app"),(0,o.kt)("p",null,"Sign in to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com"},"GitHub")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/get-started/quickstart/create-a-repo"},"create a new repository"),".\nYou can skip adding a README or any other files for now - a blank repo will do\nfine for our purposes."),(0,o.kt)("p",null,"In the folder where you created your API server, initialize a local git repo\nwith these commands in sequence. Be sure to swap out ",(0,o.kt)("inlineCode",{parentName:"p"},"your_username")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"your_repo_name")," with the appropriate values."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'echo "# My Deno Link Shortener" >> README.md\ngit init\ngit add .\ngit commit -m "first commit"\ngit branch -M main\ngit remote add origin https://github.com/your_username/your_repo_name.git\ngit push -u origin main\n')),(0,o.kt)("p",null,"You should now have a GitHub repository with your ",(0,o.kt)("inlineCode",{parentName:"p"},"server.ts")," file in it, as in\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kwhinnery/simple_api_server"},"this example repository"),". Now\nyou're ready to import and run this application on Deno Deploy."),(0,o.kt)("h2",{id:"import-and-deploy-your-appliction-project"},"Import and deploy your appliction project"),(0,o.kt)("p",null,"Next, sign up for an account on ",(0,o.kt)("a",{parentName:"p",href:"https://dash.deno.com"},"Deno Deploy")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://dash.deno.com/new"},"create a new project"),". Choose to import an existing\nGitHub repository - the one we created a moment ago. The configuration should\nlook something like this:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Deno Deploy config",src:n(6994).Z,width:"1974",height:"1758"})),(0,o.kt)("p",null,'Click on the "Create and Deploy" button - in a few moments, your link shortener\nservice will be live on Deno Deploy!'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Deno Deploy dashboard",src:n(85807).Z,width:"1976",height:"1234"})),(0,o.kt)("h2",{id:"test-out-your-new-link-shortener"},"Test out your new link shortener"),(0,o.kt)("p",null,"Without any additional configuration (Deno KV just works on Deploy), your app\nshould run the same as it did on your local machine."),(0,o.kt)("p",null,"You can add new links using the ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," handler as you did before. Just replace\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost")," URL with your live production URL on Deno Deploy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl --header "Content-Type: application/json" \\\n  --request POST \\\n  --data \'{"url":"https://docs.deno.com/runtime/manual","slug":"denodocs"}\' \\\n  https://expensive-rook-95.deno.dev/\n')),(0,o.kt)("p",null,"Similarly, you can visit your shortened URLs in the browser, or view the\nredirect coming back with a cURL command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl -v https://expensive-rook-95.deno.dev/denodocs\n")),(0,o.kt)("p",null,"This was a very simple example - from here, we suggest you check out a\nhigher-level web framework like ",(0,o.kt)("a",{parentName:"p",href:"https://fresh.deno.dev"},"Fresh"),", or learn more\nabout ",(0,o.kt)("a",{parentName:"p",href:"/kv/manual"},"Deno KV here"),". Great work deploying your simple API server!"))}d.isMDXComponent=!0},85807:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/simple_api_dashboard-e59f7c785d0969d62557d9caf6b9c682.png"},6994:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/simple_api_deploy-227f87b713b4ed18015a214f6ba345e1.png"}}]);