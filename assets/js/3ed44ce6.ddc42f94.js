"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[6838],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),p=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(u.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,f=m["".concat(u,".").concat(c)]||m[c]||d[c]||a;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8931:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={},i="Documentation Generator",l={unversionedId:"manual/tools/documentation_generator",id:"manual/tools/documentation_generator",title:"Documentation Generator",description:"deno doc followed by a list of one or more source files will print the JSDoc",source:"@site/runtime/manual/tools/documentation_generator.md",sourceDirName:"manual/tools",slug:"/manual/tools/documentation_generator",permalink:"/runtime/manual/tools/documentation_generator",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Dependency Inspector",permalink:"/runtime/manual/tools/dependency_inspector"},next:{title:"Code Formatter",permalink:"/runtime/manual/tools/formatter"}},u={},p=[{value:"Linting",id:"linting",level:2},{value:"HTML output",id:"html-output",level:2},{value:"JSON output",id:"json-output",level:2}],s={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"documentation-generator"},"Documentation Generator"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deno doc")," followed by a list of one or more source files will print the JSDoc\ndocumentation for each of the module's ",(0,r.kt)("strong",{parentName:"p"},"exported")," members."),(0,r.kt)("p",null,"For example, given a file ",(0,r.kt)("inlineCode",{parentName:"p"},"add.ts")," with the contents:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n * Adds x and y.\n * @param {number} x\n * @param {number} y\n * @returns {number} Sum of x and y\n */\nexport function add(x: number, y: number): number {\n  return x + y;\n}\n")),(0,r.kt)("p",null,"Running the Deno ",(0,r.kt)("inlineCode",{parentName:"p"},"doc")," command, prints the function's JSDoc comment to ",(0,r.kt)("inlineCode",{parentName:"p"},"stdout"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"deno doc add.ts\nfunction add(x: number, y: number): number\n  Adds x and y. @param {number} x @param {number} y @returns {number} Sum of x and y\n")),(0,r.kt)("h2",{id:"linting"},"Linting"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"--lint")," flag to check for problems in your documentation while it's\nbeing generated. ",(0,r.kt)("inlineCode",{parentName:"p"},"deno doc")," will point out three kinds of problems:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Error for an exported type from the root module referencing a non-exported\ntype.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Ensures API consumers have access to all the types the API uses. This can\nbe suppressed by exporting the type from a root module (one of the files\nspecified to ",(0,r.kt)("inlineCode",{parentName:"li"},"deno doc")," on the command line) or by marking the type with an\n",(0,r.kt)("inlineCode",{parentName:"li"},"@internal")," jsdoc tag."))),(0,r.kt)("li",{parentName:"ol"},"Error for missing return type or property type on a ",(0,r.kt)("strong",{parentName:"li"},"public")," type.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Ensures ",(0,r.kt)("inlineCode",{parentName:"li"},"deno doc")," displays the return/property type and helps improve type\nchecking performance."))),(0,r.kt)("li",{parentName:"ol"},"Error for missing JS doc comment on a ",(0,r.kt)("strong",{parentName:"li"},"public")," type.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Ensures the code is documented. Can be suppressed by adding a jsdoc\ncomment, or via an ",(0,r.kt)("inlineCode",{parentName:"li"},"@ignore")," jsdoc tag to exclude it from the\ndocumentation. Alternatively, add an ",(0,r.kt)("inlineCode",{parentName:"li"},"@internal")," tag to keep it in the\ndocs, but signify it's internal.")))),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/mod.ts"',title:'"/mod.ts"'},"interface Person {\n  name: string;\n  // ...\n}\n\nexport function getName(person: Person) {\n  return person.name;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ deno doc --lint mod.ts\nType 'getName' references type 'Person' which is not exported from a root module.\nMissing JS documentation comment.\nMissing return type.\n    at file:///mod.ts:6:1\n")),(0,r.kt)("p",null,"These lints are meant to help you write better documentation and speed up\ntype-checking in your projects. If any problems are found, the program exits\nwith non-zero exit code and the output is reported to standard error."),(0,r.kt)("h2",{id:"html-output"},"HTML output"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--html")," flag to generate a static site with documentation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ deno doc --html --name="My library" ./mod.ts\n\n$ deno doc --html --name="My library" --output=./documentation/ ./mod.ts\n\n$ deno doc --html --name="My library" ./sub1/mod.ts ./sub2/mod.ts\n')),(0,r.kt)("p",null,"The generated documentation is a static site with multiple pages that can be\ndeployed to any static site hosting service."),(0,r.kt)("p",null,"A client-side search is included in the generated site, but is not available if\nuser's browser has JavaScript disabled."),(0,r.kt)("h2",{id:"json-output"},"JSON output"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--json")," flag to output the documentation in JSON format. This JSON\nformat is consumed by the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/denoland/docland"},"deno doc website")," and is used to generate\nmodule documentation."))}d.isMDXComponent=!0}}]);